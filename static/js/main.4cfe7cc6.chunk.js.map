{"version":3,"sources":["RoomContext.tsx","components/BUILDING/Background.tsx","utils.ts","components/BUILDING/Floor.tsx","components/BUILDING/Point.tsx","components/BUILDING/Segment.tsx","components/BUILDING/Size.tsx","components/BUILDING/Door.tsx","components/ELECTRICAL/Outlet.tsx","components/ELECTRICAL/Switch.js","components/ELECTRICAL/Lamp.js","components/BUILDING/Room.tsx","components/BUILDING/Plan.tsx","components/UI/QuickMenu.tsx","components/UI/OutletPropertiesMenu.jsx","components/UI/SwitchPropertiesMenu.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RoomContext","createContext","Background","width","height","useContext","__selectedRoom","__rooms","rooms","setRooms","setSelectedRoom","addRoom","e","id","window","prompt","find","room","alert","x","clientX","y","clientY","points","getPoints","this","reduce","acc","curr","i","absX","absY","offsetX","offsetY","doors","outlets","switches","lamps","style","tabIndex","fill","onDoubleClick","onClick","onKeyDown","keyCode","getPath","current","push","length","getAllPoints","roomPoints","getPointCoords","clickCoords","pathPoints","a","b","m","p","isFinite","project","atob","len","dot","t","Math","min","max","point","left","Floor","polygon","roomId","isSelected","setPointer","setQuickMenuPosition","setQuickMenuState","stroke","strokeWidth","Point","visible","roomIndex","findIndex","handle","onDrag","dnd","deltaX","deltaY","onStop","forEach","otherPoint","abs","className","cx","cy","r","textAnchor","alignmentBaseline","pointerEvents","Segment","__quickMenuPosition","__quickMenuState","__selectedPathPoints","__pointer","__node","setSelectedPathPoints","setNode","useState","isDragging","setIsDragging","data","path","line","d","segmentClicked","preventDefault","coords","type","console","log","originalEvent","changedTouches","prev","target","allPoints","pathPoint","cancel","visibility","strokeLinecap","strokeLinejoin","opacity","Size","dx","dy","c","round","floor","sqrt","startOffset","xlinkHref","Door","door","pointsIds","doorCenter","doorId","split","side1","side2","p1","p2","newDoorCenter","newPoint","x1","y1","x2","y2","Outlet","outlet","__outletPropertiesMenu","setOutletPropertiesMenu","anchorPoint","props","outletId","grounding","shutter","angle","atan2","PI","newAnchorPoint","open","transform","fontSize","Switch","__switch","__switchPropertiesMenu","setSwitchPropertiesMenu","switchId","way","pole","dimmer","illuminated","Lamp","lamp","__lampPropertiesMenu","Room","disabled","roomClicked","newRooms","filter","el","outline","map","join","index","key","Plan","selectedRoom","innerWidth","innerHeight","xmlns","xmlnsXlink","sort","QuickMenu","quickMenuPosition","quickMenuState","selectedPathPoints","pointer","node","handleClose","Menu","transitionDuration","enter","exit","anchorReference","anchorPosition","top","undefined","onClose","nodeName","MenuItem","point1","point2","splice","OutletPropertiesMenu","outletPropertiesMenu","outletIndex","Dialog","aria-labelledby","DialogTitle","Grid","container","direction","spacing","item","xs","ToggleButtonGroup","exclusive","aria-label","value","onChange","ToggleButton","selected","justify","textAlign","handleGrounding","Button","variant","color","fullWidth","SwitchPropertiesMenu","switchPropertiesMenu","switchIndex","App","CTX","__doors","overscrollBehavior","onContextMenu","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cfe7cc6.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const RoomContext = createContext(null) \n","import React, { useContext } from \"react\";\nimport { RoomContext } from '../../RoomContext'\n\nexport default function Background({\n    width,\n    height,\n}: {\n    width: number;\n    height: number;\n}) {\n\n    const { __selectedRoom, __rooms } = useContext(RoomContext)\n\n    const [rooms, setRooms] = __rooms\n    const setSelectedRoom = __selectedRoom[1]\n\n    const addRoom = (e: any) => {\n        const id = window.prompt(\"Dénomination de la pièce\");\n\n        if (id === '' || id === null) return\n\n        if (rooms.find((room) => room.id === id)) {\n            alert(`Une pièce nommée ${id} existe déjà. Création annulée !!!`);\n            return;\n        }\n\n        const room = {\n            id: id,\n            x : e.clientX ? e.clientX - 75 : width/2,\n            y : e.clientY ? e.clientY - 75 : height/2,\n            points: [\n                {x : 0, y : 0},\n                {x : 0, y : 200},\n                {x : 200, y : 200},\n                {x : 200, y : 0},\n            ],\n            getPoints() {\n                return this.points.reduce((acc, curr, i) => {\n                    acc[i] = {\n                        x : curr.x,\n                        y : curr.y,\n                        absX : curr.x + this.x,\n                        absY : curr.y + this.y,\n                        offsetX : this.x,\n                        offsetY : this.y,\n                        i,\n                        room : id,\n                        id : `${this.id}.${i}`\n                    }\n                    return acc\n                }, [])\n            },\n            doors : [],\n            outlets : [],\n            switches : [],\n            lamps : []\n        };\n\n        setRooms([...rooms, room]);\n        setSelectedRoom(room.id);\n    }\n\n    const keyHandler = e => {\n        if (e.keyCode === 78) {\n            addRoom(e)\n        }\n    }\n\n    return (\n        <rect\n            style={{'outline':'none'}}\n            tabIndex={-1}\n            id=\"background\"\n            width={width}\n            height={height}\n            fill=\"#38a0f9\"\n            //fill=\"white\"\n            onDoubleClick={addRoom}\n            onClick={() => setSelectedRoom(null)}\n            onKeyDown={keyHandler}\n        />\n    );\n}\n","export function getPolygon(points) {\n    return points.map((point) => [point.x, point.y].join(\" \"));\n}\n\nexport function getPath(points) {\n    return points.reduce((acc, current, i) => {\n        acc[i] = [\n            current];\n        if (i > 0) {\n            acc[i - 1].push(current)\n        }\n        if (i === points.length - 1) acc[i].push(acc[0][0]);\n        return acc;\n    }, []);\n}\n\nexport function getAllPoints(rooms) {\n    let array = rooms.reduce((acc, curr, i) => {\n        const roomPoints = curr.getPoints()\n        acc.push(...roomPoints)\n        return acc\n    }, [])\n    return array\n}\n\nexport const getPointCoords = (clickCoords, pathPoints) => {   // y = m*x + p \n    const [a, b] = pathPoints\n    let [x, y] = clickCoords\n\n    //console.log('x', x)\n    //console.log('y', y)\n\n    const m = (b.y - a.y) / (b.x - a.x)\n    //console.log('m',m)\n    const p = a.y - m*a.x\n\n    if (m === 0) {\n        y = a.y\n    } \n    else if (!isFinite(m)) {\n        x = a.x\n    } else \n        y = m*x + p\n\n    return { x, y }\n\n}\n\nexport function getY(point, pathPoints) {\n\n    const [a,b] = pathPoints\n    // y = m * x + p\n    const dx = b.x - a.x\n    const dy = b.y - a.y\n    const m = dy / dx\n    const p = a.y - m * a.x\n\n    let x\n    let y\n\n    if (m === 0) {\n        x = point.x\n        y = a.y\n    } else if (!isFinite(m)) {\n        x = a.x\n        y = point.y\n    } else {\n        x = point.x\n        y = m * point.x + p\n    }\n    return {x,y}\n}\n\nexport function closestPointToSegment(point, a, b ) {\n    //console.log(point)\n}\n\nexport function project( p, a, b ) {\n    \n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n\n    dot = ( b.x - a.x ) * ( p.y - a.y ) - ( b.y - a.y ) * ( p.x - a.x );\n    \n    return {\n        point: {\n            x: a.x + atob.x * t,\n            y: a.y + atob.y * t\n        },\n        left: dot < 1,\n        dot: dot,\n        t: t\n    };\n}","import React, { useContext } from \"react\";\nimport { RoomContext } from '../../RoomContext'\n\n\nexport default function Floor({ polygon, isSelected, roomId }) {\n\n    const { setPointer, setQuickMenuPosition, setQuickMenuState } = useContext(RoomContext)\n\n    return <polygon\n        id={`${roomId + '.floor'}`}\n        points={polygon}\n        fill=\"#ffffaa\"\n        stroke=\"steelblue\"\n        strokeWidth={8}\n    />;\n}\n","import React, { useContext } from \"react\";\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { getAllPoints } from \"../../utils\";\n\nfunction Point({ point, visible, }) {\n\n    const { __rooms } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n\n    const roomIndex = rooms.findIndex(room => room.id === point.room)\n\n    if (!visible) {\n        return null;\n    }\n\n    const dragging = (e: any, dnd: DraggableData) => {\n\n        rooms[roomIndex].points[point.i].x = point.x + dnd.deltaX\n        rooms[roomIndex].points[point.i].y = point.y + dnd.deltaY\n\n        setRooms([...rooms])\n    };\n\n    const dragEnd = () => {\n\n        let allPoints = getAllPoints(rooms)\n\n\n        allPoints.forEach(otherPoint => {\n            if (otherPoint.room !== point.room || otherPoint.i !== point.i) {\n                if (Math.abs(point.absX - otherPoint.absX) < 16) {\n                    rooms[roomIndex].points[point.i].x = otherPoint.absX - point.offsetX\n                }\n                if (Math.abs(point.absY - otherPoint.absY) < 16) {\n                    rooms[roomIndex].points[point.i].y = otherPoint.absY - point.offsetY\n                }\n\n            }\n        })\n        setRooms([...rooms])\n    };\n\n    return (\n        <DraggableCore\n            handle=\".corner\"\n            onDrag={dragging}\n            onStop={dragEnd}\n        >\n            <g>\n                <circle\n                    className=\"corner\"\n                    cx={point.x}\n                    cy={point.y}\n                    r={16}\n                    fill={\"white\"}\n                    stroke={\"#38a0f9\"}\n                    strokeWidth={4}\n                />\n                <text\n                    x={point.x}\n                    y={point.y}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"central\"\n                    pointerEvents=\"none\"\n                    fill=\"grey\"\n                >\n                    {point.i}\n                </text>\n            </g>\n        </DraggableCore>\n    );\n}\n\nexport default Point;\n","import React, { useState, useContext } from \"react\";\nimport { line } from \"d3-shape\";\nimport { DraggableCore } from \"react-draggable\";\nimport { RoomContext } from '../../RoomContext'\nimport { getAllPoints } from \"../../utils\";\n\nexport default function Segment({ pathPoints, visible, }) {\n\n    const { __quickMenuPosition, __quickMenuState, __selectedPathPoints, __rooms, __pointer, __node } = useContext(RoomContext)\n\n    const setQuickMenuPosition = __quickMenuPosition[1]\n    const setQuickMenuState = __quickMenuState[1]\n    const setSelectedPathPoints = __selectedPathPoints[1]\n    const [rooms, setRooms] = __rooms\n    const setPointer = __pointer[1]\n    const setNode = __node[1]\n\n    const [isDragging, setIsDragging] = useState(false)\n\n    let [a, b] = pathPoints;\n\n    const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n    let data = [[a.x, a.y], [b.x, b.y]]\n\n    let path = line()\n        .x((d) => d[0])\n        .y((d) => d[1])\n\n    const dragging = (e, dnd) => {\n\n        setIsDragging(true)\n\n        a.x += dnd.deltaX\n        a.y += dnd.deltaY\n\n        b.x += dnd.deltaX\n        b.y += dnd.deltaY\n\n        rooms[roomIndex].points[a.i].x = a.x\n        rooms[roomIndex].points[a.i].y = a.y\n\n        rooms[roomIndex].points[b.i].x = b.x\n        rooms[roomIndex].points[b.i].y = b.y\n\n        setRooms([...rooms])\n    }\n\n    const dragEnd = (e, dnd) => {\n\n        if (!isDragging) {\n            segmentClicked(e)\n            return\n        }\n        setIsDragging(false)\n\n        let allPoints = getAllPoints(rooms)\n\n        pathPoints.forEach(pathPoint => {\n            allPoints.forEach(point => {\n                if (pathPoint.id !== point.id) {\n                    if (Math.abs(pathPoint.absX - point.absX) <= 16) {\n                        rooms[roomIndex].points[pathPoint.i].x = point.absX - pathPoint.offsetX\n                    }\n                    if (Math.abs(pathPoint.absY - point.absY) <= 16) {\n                        rooms[roomIndex].points[pathPoint.i].y = point.absY - pathPoint.offsetY\n                    }\n                }\n            });\n        });\n        setRooms([...rooms])\n    }\n\n    const segmentClicked = e => {\n        e.preventDefault()\n        \n        let coords = { x : null, y : null}\n        \n        if (e.type === 'mouseup') {\n            coords.x = e.clientX\n            coords.y = e.clientY\n            setPointer(coords)\n        } else {\n            console.log(e)\n            console.log(e.originalEvent)\n            coords.x = e.changedTouches[0].clientX\n            coords.y = e.changedTouches[0].clientY\n            setPointer(coords)\n        }\n\n\n        setQuickMenuPosition(coords)\n        setQuickMenuState(prev => !prev)\n        setSelectedPathPoints(pathPoints)\n        setNode(e.target)\n    }\n\n    // if (!visible) {\n    //     return null;\n    // }\n\n    return (\n        <DraggableCore\n            handle=\".segment\"\n            //onStart={() => setIsDragging(true)}\n            onDrag={dragging}\n            onStop={dragEnd}\n            cancel=\".doorCenter, .outlet\"\n        >\n            <path\n                style={visible ? { visibility: \"visible\" } : { visibility: 'hidden' }}\n                d={path(data)}\n                id={a.room + '.' + a.i + '.' + b.i}\n                className=\"segment\"\n                strokeWidth={20}\n                stroke=\"#77cfff\"\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                opacity={0.8}\n            //onClick={e => segmentClicked(e)}\n            />\n        </DraggableCore>\n    );\n}\n","import React from \"react\";\n\nfunction Size({ pathPoints, visible }) {\n    const [a, b] = pathPoints;\n\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n\n    var c = Math.round(Math.floor(Math.sqrt(dx * dx + dy * dy) / 5) * 5)\n    //console.log(c)\n\n    if (!visible) {\n        return null;\n    }\n\n    return ( // need to \n        <text\n            //transform='rotate(90 )'\n            style={{ pointerEvents: 'none', fill: '#404040' }}>\n            <textPath startOffset=\"45%\" xlinkHref={\"#\" + a.room + '.' + a.i + '.' + b.i}>\n                {c}\n            </textPath>\n        </text>\n    );\n}\n\nexport default Size;\n","import React, { useContext } from 'react'\nimport { project } from '../../utils'\nimport { RoomContext } from \"../../RoomContext\"\nimport { DraggableCore } from \"react-draggable\"\n\nexport default function Door({ door, i }) {\n\n    const { __rooms } = useContext(RoomContext)\n\n    const [rooms, setRooms] = __rooms\n\n    const { pointsIds, doorCenter, doorId } = door\n\n    const room = rooms.find(({ id }) => id === pointsIds.a.split('.')[0])\n\n    const a = room.getPoints().find(({ id }) => id === pointsIds.a)\n    const b = room.getPoints().find(({ id }) => id === pointsIds.b)\n\n    const side1 = { x: doorCenter.x - 50, y: doorCenter.y - 50 }\n    const side2 = { x: doorCenter.x + 50, y: doorCenter.y + 50 }\n\n    //console.log(side1)\n\n    const p1 = project(side1, a, b).point\n    const p2 = project(side2, a, b).point\n\n    const dragging = (e, dnd) => {\n\n        const newDoorCenter = { ...doorCenter }\n        newDoorCenter.x += dnd.deltaX\n        newDoorCenter.y += dnd.deltaY\n\n        const newPoint = project(newDoorCenter, a, b)\n\n        room.doors[i].doorCenter.x = newPoint.point.x\n        room.doors[i].doorCenter.y = newPoint.point.y\n        setRooms([...rooms])\n    }\n\n    return (\n\n        <DraggableCore\n            handle=\".doorCenter\"\n            onDrag={dragging}\n        >\n\n            <line\n                className='doorCenter'\n                id={doorId}\n                x1={p1.x}\n                y1={p1.y}\n                x2={p2.x}\n                y2={p2.y}\n                fill='#ffffaa'\n                stroke=\"#ffffaa\"\n                strokeWidth={8}\n            />\n\n\n        </DraggableCore>\n    )\n}\n","import React, { useContext } from 'react'\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore } from 'react-draggable'\nimport { project } from '../../utils'\n\n\nfunction Outlet({ outlet, i }) {\n\n    const { __rooms, __outletPropertiesMenu } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n    const [outletPropertiesMenu, setOutletPropertiesMenu] = __outletPropertiesMenu\n\n    const { anchorPoint, pointsIds, outletId, props } = outlet\n\n    const { grounding, shutter, type } = props\n\n\n    const room = rooms.find(({ id }) => id === pointsIds.a.split('.')[0])\n\n    const a = room.getPoints().find(({ id }) => id === pointsIds.a)\n    const b = room.getPoints().find(({ id }) => id === pointsIds.b)\n\n    const coords = project(anchorPoint, a, b).point\n\n    var angle = (Math.atan2(b.y - a.y, b.x - a.x) * 180 / Math.PI) - 90;\n\n    const dragging = (e, dnd) => {\n\n        const newAnchorPoint = { ...anchorPoint }\n        newAnchorPoint.x += dnd.deltaX\n        newAnchorPoint.y += dnd.deltaY\n\n        const newPoint = project(newAnchorPoint, a, b)\n\n        room.outlets[i].anchorPoint.x = newPoint.point.x\n        room.outlets[i].anchorPoint.y = newPoint.point.y\n        setRooms([...rooms])\n    }\n\n\n    return (\n        <DraggableCore\n            handle=\".outlet\"\n            onDrag={dragging}\n        >\n            <g\n                className='outlet'\n                style={{ pointerEvents: 'all' }}\n                onClick={() => {\n                    setOutletPropertiesMenu(prev => { return { ...prev, open: true, outlet: outlet } })\n                }\n                }\n\n            >\n\n\n                <g\n                    id=\"1\"\n                    transform={`translate(${coords.x} ${coords.y}) scale(1.75) rotate(${angle})`}\n                >\n                    <text\n                        transform={'translate(10 5.5) rotate(90)'}\n                        fontSize={'50%'}\n                    >\n                        {type === 1 ? null : type}\n                    </text>\n                    <g id=\"2\"\n                        transform={`translate(2 2)`}\n\n                    >\n                        <path // ground\n                            d=\"M3.54 11.58 L3.54 0.24\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={grounding === true ? 'visible' : 'hidden'}\n                        />\n\n                        <path // protect left\n                            d=\"M8.27 1.2 L8.27 0.25\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={shutter === true ? 'visible' : 'hidden'}\n\n\n                        />\n                        <path // protect right\n                            d=\"M8.27 11.6 L8.27 10.65\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={shutter === true ? 'visible' : 'hidden'}\n\n\n                        />\n                        <path //arc\n                            d=\"M8.27 10.65 A4.72441 4.72441 0 0 1 3.55 5.93 A4.72441 4.72441 0 0 1 8.27 1.2\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n\n                        />\n                        <path //foot\n                            d=\"M3.54 5.92 L-0 5.92\"\n                            id='coucou'\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        />\n                    </g>\n                </g>\n\n            </g>\n        </DraggableCore>\n    )\n}\n\nexport default Outlet\n","import React, { useContext, useState } from 'react'\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore } from 'react-draggable'\nimport { project } from '../../utils'\n\n\nfunction Switch({ __switch, i }) {\n\n    const { __rooms, __switchPropertiesMenu } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n    const [switchPropertiesMenu, setSwitchPropertiesMenu] = __switchPropertiesMenu\n\n    const { anchorPoint, pointsIds, switchId, props } = __switch\n\n    const { way, pole, dimmer, illuminated, type } = props\n\n    const [isDragging, setIsDragging] = useState(false)\n\n\n\n    const room = rooms.find(({ id }) => id === pointsIds.a.split('.')[0])\n\n    const a = room.getPoints().find(({ id }) => id === pointsIds.a)\n    const b = room.getPoints().find(({ id }) => id === pointsIds.b)\n\n    const coords = project(anchorPoint, a, b).point\n\n    var angle = (Math.atan2(b.y - a.y, b.x - a.x) * 180 / Math.PI) - 90;\n\n    const dragging = (e, dnd) => {\n\n        console.log(e.target)\n        setIsDragging(true)\n\n        const newAnchorPoint = { ...anchorPoint }\n        newAnchorPoint.x += dnd.deltaX\n        newAnchorPoint.y += dnd.deltaY\n\n        const newPoint = project(newAnchorPoint, a, b)\n\n        room.switches[i].anchorPoint.x = newPoint.point.x\n        room.switches[i].anchorPoint.y = newPoint.point.y\n        setRooms([...rooms])\n    }\n\n    const dragEnd = (e) => {\n\n        if (!isDragging) {\n            console.log(e.target)\n            setSwitchPropertiesMenu(prev => { return { ...prev, open: true, __switch: __switch } })\n            return\n        }\n        setIsDragging(false)\n    }\n\n\n    return (\n        <DraggableCore\n            handle=\".switch\"\n            onDrag={dragging}\n            onStop={dragEnd}\n        >\n            <g\n                className='switch'\n                style={{ pointerEvents: 'all' }}\n                // onClick={(e) => {\n                //     setSwitchPropertiesMenu(prev => { return { ...prev, open: true, __switch: __switch } })\n                // }\n                // }\n            >\n                <g id=\"1\"\n                    transform={`translate(${coords.x} ${coords.y}) scale(1.75) rotate(${angle + 90})`}\n                >\n                    <g id=\"2\"\n                        transform='translate(0 -17)'\n                    >\n                        {/* <title>Double pole change over switch</title> */}\n                        <path\n                            d=\"M8.55 10.53 A2.83465 2.83465 0 1 1 2.88 10.53 A2.83465 2.83465 0 1 1 8.55 10.53 Z\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        // visibility={'hidden'}\n\n                        />\n                        <path // double pole\n                            d=\"M8.68 2.39 L10.65 3.11\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={pole === 2 && type === 'switch' ? 'visible' : 'hidden'}\n\n\n                        />\n                        <path // main switch \n                            d=\"M6.69 7.87 L9.46 0.24 L11.44 0.96\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={type === 'push' ? 'hidden' : 'visible'}\n                        />\n                        <path // double pole ????\n                            d=\"M8.55 10.53 A2.83465 2.83465 0 1 1 2.88 10.53 A2.83465 2.83465 0 1 1 8.55 10.53\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={pole === 2 && type === 'switch' ? 'hidden' : 'hidden'}\n\n                        />\n                        <path // double pole\n                            d=\"M2.76 18.68 L0.78 17.96\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={pole === 2 && type === 'switch' && way === 2 ? 'visible' : 'hidden'}\n\n                        />\n                        <path // second throw\n                            d=\"M4.75 13.2 L1.97 20.83 L0 20.11\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={way === 2 && type === 'switch' ? 'visible' : 'hidden'}\n\n                        />\n                    </g>\n                </g>\n            </g>\n\n\n\n        </DraggableCore>\n    )\n}\n\nexport default Switch\n","import React, { useContext } from 'react'\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore } from 'react-draggable'\nimport { project } from '../../utils'\n\n\nfunction Lamp({ lamp, i }) {\n\n    const { __rooms, __lampPropertiesMenu } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n\n    const { anchorPoint, id } = lamp\n    const { x, y } = anchorPoint\n\n    const room = rooms.find(({ id }) => id === id.split('.')[0])\n\n    const dragging = (e, dnd) => {\n\n        const newAnchorPoint = { ...anchorPoint }\n        newAnchorPoint.x += dnd.deltaX\n        newAnchorPoint.y += dnd.deltaY\n\n        room.lamps[i].anchorPoint.x = newAnchorPoint.x\n        room.lamps[i].anchorPoint.y = newAnchorPoint.y\n        setRooms([...rooms])\n    }\n\n\n    return (\n        <DraggableCore\n            handle=\".lamp\"\n            onDrag={dragging}\n        >\n            <g\n                className='lamp'\n                transform={`translate(${x} ${y}) scale(1.75)`}\n            >\n                <rect \n                    x={0}\n                    y={0}\n                    height={12}\n                    width={12}\n                    visibility='hidden'\n                    style={{pointerEvents:'all'}}\n                />\n                <title>Lighting</title>\n                <g\n                    id=\"1\"\n                    transform=\"translate(0.125,-0.125)\"\n                    style={{ pointerEvents: 'all' }}\n                >\n                    <title>Lighting</title>\n                    <g id=\"2\" transform=\"translate(8.27502,-7.97777) rotate(45)\">\n                        <title>Lighting</title>\n                        <path\n                            d=\"M0 11.64 L15.91 11.64\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        //visibility={shutter === true ? 'visible' : 'hidden'}\n                        />\n                    </g>\n                    <g id=\"3\" transform=\"translate(19.6136,8.47777) rotate(135)\">\n                        <title>Lighting</title>\n                        <path\n                            d=\"M0 11.64 L16.1 11.64\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        //visibility={shutter === true ? 'visible' : 'hidden'}\n                        />\n                    </g>\n                </g>\n            </g>\n        </DraggableCore>\n    )\n}\n\nexport default Lamp\n","import React, { useContext, useState } from \"react\";\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { getPath, getPolygon, getAllPoints } from \"../../utils\";\nimport Floor from \"./Floor\";\nimport Point from \"./Point\";\nimport Segment from \"./Segment\";\nimport Size from \"./Size\";\nimport Door from './Door'\nimport Outlet from '../ELECTRICAL/Outlet'\nimport Switch from '../ELECTRICAL/Switch'\nimport Lamp from '../ELECTRICAL/Lamp'\n\n\nfunction Room({\n    isSelected,\n    room,\n    i\n}) {\n\n    const { __rooms, __selectedRoom, __pointer, __quickMenuPosition, __quickMenuState, __node } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n    const setSelectedRoom = __selectedRoom[1]\n    const [pointer, setPointer] = __pointer\n    const [quickMenuPosition, setQuickMenuPosition] = __quickMenuPosition\n    const [quickMenuState, setQuickMenuState] = __quickMenuState\n    const [node, setNode] = __node\n\n    const [isDragging, setIsDragging] = useState(false)\n\n    const deleteRoom = (e: any) => {\n        if (isSelected) {\n            if (e.keyCode === 8) {\n                setRooms((rooms: any) => rooms.filter((el: any) => el.id !== room.id));\n            }\n        }\n    };\n\n    const roomClicked = e => {\n        e.preventDefault()\n        console.log(e.type)\n\n        let coords = { x: null, y: null }\n\n        if (e.type === 'mouseup' || e.type === 'click') {\n            coords.x = e.clientX\n            coords.y = e.clientY\n            setPointer(coords)\n        } else {\n            console.log(e)\n            console.log(e.originalEvent)\n            coords.x = e.changedTouches[0].clientX\n            coords.y = e.changedTouches[0].clientY\n            setPointer(coords)\n        }\n\n        setQuickMenuPosition(coords)\n        setQuickMenuState(prev => !prev)\n        setNode(e.target)\n\n    }\n\n    const dragging = (e: any, dnd: DraggableData) => {\n        e.preventDefault()\n\n        setIsDragging(true)\n\n        const newRooms = [...rooms]\n        newRooms[i].x += dnd.deltaX\n        newRooms[i].y += dnd.deltaY\n\n        setRooms(newRooms)\n    };\n\n    const dragEnded = (e) => {\n\n        if (!isDragging) {\n            if (isSelected) { roomClicked(e)}\n            return\n        }\n        \n        setIsDragging(false)\n\n        const allPoints = getAllPoints(rooms)\n\n        room.getPoints().forEach(point => {\n            allPoints.forEach(otherPoint => {\n\n                let dx = Math.abs(point.absX - otherPoint.absX)\n                let dy = Math.abs(point.absY - otherPoint.absY)\n\n                if (point.room !== otherPoint.room) {\n                    if (dx <= 16) {\n                        rooms[i].points[point.i].x = otherPoint.absX - point.offsetX\n                    }\n                    if (dy <= 16) {\n                        rooms[i].points[point.i].y = otherPoint.absY - point.offsetY\n                    }\n                }\n            })\n        })\n        setRooms([...rooms])\n    }\n\n    return (\n        <DraggableCore\n            handle=\".room\"\n            cancel=\".corner, .segment, .doorCenter, .outlet, .switch, .lamp\"\n            disabled={!isSelected}\n            onStop={dragEnded}\n            onDrag={dragging}\n        >\n            <g\n                className={\"room\"}\n                id={room.id}\n                transform={`translate(${room.x} ${room.y})`}\n                onClick={(e) => {\n                    //if (isSelected) { roomClicked(e)}\n                    setSelectedRoom(room.id);\n                }}\n                onKeyDown={deleteRoom}\n                tabIndex={-1}\n                style={{ outline: 0 }}\n            >\n                <Floor\n                    polygon={getPolygon(room.getPoints())}\n                    isSelected={isSelected}\n                    roomId={room.id}\n                />\n\n                {\n                    getPath(room.getPoints()).map((pathPoints, index) => (\n                        <Segment\n                            key={index}\n                            pathPoints={pathPoints}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n\n                {\n                    room.getPoints().map((point, index) => (\n                        <Point\n                            key={index}\n                            point={point}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n                {\n                    getPath(room.getPoints()).map((pathPoints, index) => (\n                        <Size\n                            key={index}\n                            pathPoints={pathPoints}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n                {\n                    room.doors.map((door, i) => (\n                        <Door\n                            key={i}\n                            door={door}\n                            i={i}\n                        />\n                    ))\n                }\n                {\n                    room.outlets.map((outlet, i) => (\n                        <Outlet\n                            key={i}\n                            outlet={outlet}\n                            i={i}\n                        />\n                    ))\n                }\n                {\n                    room.switches.map((__switch, i) => (\n                        <Switch\n                            key={i}\n                            __switch={__switch}\n                            i={i}\n                        />\n                    ))\n                }\n                {\n                    room.lamps.map((lamp, i) => (\n                        <Lamp\n                            key={i}\n                            lamp={lamp}\n                            i={i}\n                        />\n                    ))\n                }\n            </g>\n        </DraggableCore>\n    );\n}\n\nexport default Room;\n\n","import React, { useContext } from \"react\";\nimport Background from \"./Background\";\nimport Room from \"./Room\";\nimport { RoomContext } from \"./../../RoomContext\";\n\nexport default function Plan() {\n\n    const { __rooms, __selectedRoom } = useContext(RoomContext)\n\n    const [rooms] = __rooms;\n    const [selectedRoom] = __selectedRoom;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    return (\n        <svg\n            id='plan'\n            width={width}\n            height={height}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n\n            <Background\n                width={width}\n                height={height}\n            />\n\n            {\n                rooms\n                    .sort((a, b) => {\n                        const c = (a.id === selectedRoom)\n                        const d = (b.id === selectedRoom)\n                        return (c === d) ? 0 : c ? 1 : - 1\n                    })\n                    .map((room, i) => {\n                        return (\n                            <Room\n                                key={room.id}\n                                isSelected={selectedRoom === room.id ? true : false}\n                                room={room}\n                                i={i}\n                            />\n                        );\n                    })\n            }\n\n            {\n                rooms.reduce((acc, curr, i) => {\n                    acc.push(...curr.doors)\n                    return acc\n                },[]).map((door,i) => {\n                    const room = rooms.find(({id}) => id === door.doorId.split('.')[0])\n                    console.log('#' + door.doorId)\n\n                   // if (selectedRoom !== room.id) {\n                        return (\n                            <use\n                            key={i}\n                            xlinkHref={'#' + door.doorId}\n                            transform={`translate(${room.x} ${room.y})`}\n                        /> \n                        )\n                    //} else return\n                })\n            }\n\n\n\n\n\n        </svg>\n    );\n}\n","import React, { useContext } from 'react'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport { getPointCoords, getAllPoints } from './../../utils'\nimport { RoomContext } from './../../RoomContext'\n\nconst QuickMenu = () => {\n\n    const {\n        __quickMenuPosition,\n        __quickMenuState,\n        __selectedPathPoints,\n        __rooms,\n        __pointer,\n        __outletPropertiesMenu,\n        __switchPropertiesMenu,\n        __node\n    } = useContext(RoomContext)\n\n    const [quickMenuPosition, setQuickMenuPosition] = __quickMenuPosition\n    const [quickMenuState, setQuickMenuState] = __quickMenuState\n    const [selectedPathPoints] = __selectedPathPoints\n    const [rooms, setRooms] = __rooms\n    const [pointer] = __pointer\n    const [outletPropertiesMenu, setOutletPropertiesMenu] = __outletPropertiesMenu\n    const [switchPropertiesMenu, setSwitchPropertiesMenu] = __switchPropertiesMenu\n    const [node, setNode] = __node\n\n    if (!node) return null\n\n    const handleClose = () => {\n        setQuickMenuState(false)\n        setQuickMenuPosition(null)\n    }\n\n    const addCorner = e => {\n        //e.persist()\n\n        const [a] = selectedPathPoints\n        const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n        const x = pointer.x - rooms[roomIndex].x\n        const y = pointer.y - rooms[roomIndex].y\n\n        const newPoint = getPointCoords([x, y], selectedPathPoints)\n\n        getAllPoints(rooms).forEach(point => {\n            //console.log(newPoint)\n            if (Math.abs(point.absX - (newPoint.x + rooms[roomIndex].x)) < 16) {\n                newPoint.x = point.absX - rooms[roomIndex].x\n            }\n            if (Math.abs(point.absY - (newPoint.y + rooms[roomIndex].y)) < 16) {\n                newPoint.y = point.absY - rooms[roomIndex].y\n            }\n        })\n\n        const point1 = { ...newPoint }\n        const point2 = { ...newPoint }\n\n        rooms[roomIndex].points.splice(a.i + 1, 0, point1, point2)\n        setRooms([...rooms])\n\n        handleClose()\n    }\n\n    const addDoor = () => {\n\n        const [a, b] = selectedPathPoints\n\n        const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n        const x = pointer.x - rooms[roomIndex].x\n        const y = pointer.y - rooms[roomIndex].y\n\n        const doorCenter = getPointCoords([x, y], selectedPathPoints)\n        const doorId = rooms[roomIndex].id + '.door.' + rooms[roomIndex].doors.length\n\n\n        const pointsIds = { a: a.id, b: b.id }\n\n        const door = { pointsIds, doorCenter, doorId }\n\n        rooms[roomIndex].doors.push(door)\n\n        setRooms([...rooms])\n\n        handleClose()\n\n    }\n\n    const addOutlet = e => {\n        const [a, b] = selectedPathPoints\n\n        const room = rooms.find(({ id }) => id === a.room)\n\n        const x = pointer.x - room.x\n        const y = pointer.y - room.y\n\n        const pointsIds = { a: a.id, b: b.id }\n        const anchorPoint = getPointCoords([x, y], selectedPathPoints)\n        const id = room.id + '.outlet.' + room.outlets.length\n\n        const props = {\n            type: 1,\n            grounding: true,\n            shutter: true\n        }\n\n        const outlet = { anchorPoint, pointsIds, id, props }\n        console.log(props)\n\n        room.outlets.push(outlet)\n        setOutletPropertiesMenu(prev => { return { ...prev, open: true, outlet: outlet } })\n        setRooms([...rooms])\n        handleClose()\n\n\n    }\n\n    const addSwitch = e => {\n        const [a, b] = selectedPathPoints\n\n        const room = rooms.find(({ id }) => id === a.room)\n\n        const x = pointer.x - room.x\n        const y = pointer.y - room.y\n\n        const pointsIds = { a: a.id, b: b.id }\n        const anchorPoint = getPointCoords([x, y], selectedPathPoints)\n        const id = room.id + '.switch.' + room.switches.length\n\n        const props = {\n            way : 1,\n            pole : 1,\n            dimmer : false,\n            illuminated : false,\n            type : 'switch'\n        }\n\n        const __switch = { anchorPoint, pointsIds, id, props }\n\n        room.switches.push(__switch)\n        setSwitchPropertiesMenu(prev => { return { ...prev, open: true, __switch: __switch } })\n        setRooms([...rooms])\n        handleClose()\n    }\n    \n    const addlamp = e => {\n        const room = rooms.find(({ id }) => id === node.id.split('.')[0])\n\n        const x = pointer.x - room.x\n        const y = pointer.y - room.y\n\n        const anchorPoint = { x, y}\n        const id = room.id + '.lamp.' + room.lamps.length\n\n        const lamp = {anchorPoint, id}\n        room.lamps.push(lamp)\n        console.log(rooms)\n        setRooms([...rooms])\n\n        handleClose()\n    }\n\n    return (\n        <Menu\n            id=\"quickMenu\"\n            transitionDuration={{ enter: 0, exit: 0 }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n                quickMenuPosition !== null\n                    ? { top: quickMenuPosition.y, left: quickMenuPosition.x }\n                    : undefined\n            }\n            open={quickMenuState}\n            onClose={handleClose}\n        >\n            {node.nodeName === 'path' ? <MenuItem onClick={addCorner}>add corner</MenuItem> : null }\n            {node.nodeName === 'path' ? <MenuItem onClick={addDoor}>add door</MenuItem> : null }\n            <MenuItem onClick={addOutlet}>add outlet</MenuItem>\n            <MenuItem onClick={addSwitch}>add switch</MenuItem>\n            {node.nodeName === 'polygon' ? <MenuItem onClick={addlamp}>add lamp</MenuItem> : null}\n        </Menu>\n    )\n}\n\nexport default QuickMenu\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Dialog, DialogTitle, Grid, Divider, Button } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport { RoomContext } from '../../RoomContext'\n\nfunction OutletPropertiesMenu() {\n\n    const { __outletPropertiesMenu, __rooms } = useContext(RoomContext)\n\n    const [outletPropertiesMenu, setOutletPropertiesMenu] = __outletPropertiesMenu\n    const [rooms, setRooms] = __rooms\n\n    const { open, outlet } = outletPropertiesMenu\n\n    if (!outlet) {\n        return null\n    }\n\n    const roomIndex = rooms.findIndex(room => room.id === outlet.id.split('.')[0])\n    const room = rooms.find(({ id }) => id === outlet.id.split('.')[0])\n    const outletIndex = room.outlets.findIndex( el => el.id === outlet.id )\n    const thisOutlet = room.outlets.find(({ id }) => id === outlet.id)\n\n    const { grounding, shutter, type } = thisOutlet.props\n\n    const handleClose = () => {\n        setOutletPropertiesMenu(prev => { return { ...prev, open: false } })\n    }\n\n    const handleGrounding = (e, value) => {\n        console.log(e)\n\n        rooms[roomIndex].outlets[outletIndex].props.grounding = !value\n\n        setRooms([...rooms])\n        console.log(rooms)\n    }\n\n    const handleShutter = (e, value) => {\n        console.log(e)\n\n        rooms[roomIndex].outlets[outletIndex].props.shutter = !value\n\n        setRooms([...rooms])\n    }\n\n    const handleType = (e, value) => {\n        rooms[roomIndex].outlets[outletIndex].props.type = value\n        setRooms([...rooms])\n    }\n\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open} onClose={handleClose}>\n            <DialogTitle id=\"simple-dialog-title\">Set outlet properties</DialogTitle>\n\n            <Grid container direction='column' spacing={1}>\n                <Grid item>\n                    <Grid\n                        container\n                        direction='column'\n                    >\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={type}\n                            onChange={handleType}\n\n                            >\n                                <ToggleButton value={1} selected={type === 1}>ONE</ToggleButton>\n                                <ToggleButton value={2} selected={type === 2}>TWO</ToggleButton>\n                                <ToggleButton value={3} selected={type === 3}>THREE</ToggleButton>\n                                <ToggleButton value={4} selected={type === 4}>FOOR</ToggleButton>\n                                <ToggleButton value={5} selected={type === 5}>FIVE</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid container justify=\"center\" spacing={0}>\n\n                        <Grid item xs={6} style={{ textAlign: \"center\" }} >\n                            <ToggleButton\n                                value={grounding}\n                                selected={grounding}\n                                onChange={(e, value) => handleGrounding(e, value)}\n                            >\n                                Grounding\n                            </ToggleButton>\n                        </Grid>\n                        <Grid item xs={6} style={{ textAlign: \"center\" }} >\n                            <ToggleButton\n                                value={shutter}\n                                selected={shutter}\n                            onChange={handleShutter}\n                            >\n                                Shutter</ToggleButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button onClick={() => setOutletPropertiesMenu({ open: false })} variant=\"contained\" color=\"primary\" fullWidth>\n                        Save\n                    </Button>\n                </Grid>\n            </Grid>\n\n        </Dialog>\n    )\n}\n\nexport default OutletPropertiesMenu\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Dialog, DialogTitle, Grid, Divider, Button } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport { RoomContext } from '../../RoomContext'\n\nfunction SwitchPropertiesMenu() {\n\n    const { __switchPropertiesMenu, __rooms } = useContext(RoomContext)\n\n    const [switchPropertiesMenu, setSwitchPropertiesMenu] = __switchPropertiesMenu\n    const [rooms, setRooms] = __rooms\n\n    const { open, __switch } = switchPropertiesMenu\n\n    if (!__switch) {\n        return null\n    }\n\n    const { way, pole, dimmer, illuminated, type } = __switch.props\n    //console.log(__switch.props)\n\n    const roomIndex = rooms.findIndex(room => room.id === __switch.id.split('.')[0])\n    const room = rooms.find(({ id }) => id === __switch.id.split('.')[0])\n    const switchIndex = room.switches.findIndex(el => el.id === __switch.id)\n    const this__switch = room.switches.find(({ id }) => id === __switch.id)\n\n    const handleClose = () => {\n        setSwitchPropertiesMenu(prev => { return { ...prev, open: false } })\n    }\n\n    const handleType = (e, value) => {\n        rooms[roomIndex].switches[switchIndex].props.type = value\n        setRooms([...rooms])\n    }\n\n    const handleWay = (e, value) => {\n\n        rooms[roomIndex].switches[switchIndex].props.way = value\n        setRooms([...rooms])\n    }\n\n    const handlePole = (e, value) => {\n\n        rooms[roomIndex].switches[switchIndex].props.pole = value\n        setRooms([...rooms])\n    }\n\n    const handleDimmer = (e, value) => {\n\n        rooms[roomIndex].switches[switchIndex].props.dimmer = !value\n        setRooms([...rooms])\n    }\n    const handleIlluminated = (e, value) => {\n\n        rooms[roomIndex].switches[switchIndex].props.illuminated = !value\n        setRooms([...rooms])\n    }\n\n    // const handleType = (e, value) => {\n    //     rooms[roomIndex].switchs[switchIndex].props.type = value\n    //     setRooms([...rooms])\n    // }\n\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open} onClose={handleClose}>\n            <DialogTitle id=\"simple-dialog-title\">Set switch properties</DialogTitle>\n\n            <Grid container direction='column' spacing={1}>\n                <Grid item>\n                    <Grid\n                        container\n                        direction='column'\n                    >\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={type}\n                                onChange={handleType}\n\n                            >\n                                <ToggleButton value={'switch'} selected={type === 'switch'}>Switch</ToggleButton>\n                                <ToggleButton value={'push'} selected={type === 'push'}>Push</ToggleButton>\n                                <ToggleButton value={'inverter'} selected={type === 'inverter'}>Inverter</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={way}\n                                onChange={handleWay}\n\n                            >\n                                <ToggleButton\n                                    value={1}\n                                    selected={way === 1 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Single throw\n                                </ToggleButton>\n\n                                <ToggleButton\n                                    value={2}\n                                    selected={way === 2 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n                                >\n                                    Double throw\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={pole}\n                                onChange={handlePole}\n                            >\n                                <ToggleButton\n                                    value={1}\n                                    selected={pole === 1 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Single Pole\n                                </ToggleButton>\n\n                                <ToggleButton\n                                    value={2}\n                                    selected={pole === 2 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Double Pole\n                                </ToggleButton>\n\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item>\n                            <ToggleButton\n                                value={dimmer}\n                                selected={dimmer}\n                                onChange={handleDimmer}\n                            >\n                                Dimmer\n                            </ToggleButton>\n                        </Grid>\n                        <Grid item>\n                            <ToggleButton\n                                value={illuminated}\n                                selected={illuminated}\n                                onChange={handleIlluminated}\n                            >\n                                Illuminated\n                            </ToggleButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid container justify=\"center\" spacing={0}>\n\n                        <Grid item xs={6} style={{ textAlign: \"center\" }} >\n\n                        </Grid>\n                        <Grid item xs={6} style={{ textAlign: \"center\" }} >\n\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button onClick={() => setSwitchPropertiesMenu({ open: false })} variant=\"contained\" color=\"primary\" fullWidth>\n                        Save\n                    </Button>\n                </Grid>\n            </Grid>\n\n        </Dialog>\n    )\n}\n\nexport default SwitchPropertiesMenu\n","import React, { useState } from \"react\";\nimport Plan from \"./components/BUILDING/Plan\";\nimport \"./App.css\";\nimport QuickMenu from './components/UI/QuickMenu'\nimport OutletPropertiesMenu from './components/UI/OutletPropertiesMenu'\nimport SwitchPropertiesMenu from './components/UI/SwitchPropertiesMenu'\nimport { RoomContext } from './RoomContext'\n\nfunction App() {\n\n    const __quickMenuPosition = useState(null)\n    const __quickMenuState = useState(false)\n    const __rooms = useState([])\n    const __selectedRoom = useState(null)\n    const __selectedPathPoints = useState(null)\n    const __pointer = useState(null)\n    const __doors = useState([])\n    const __node = useState(null)\n    const __outletPropertiesMenu = useState({ open: false })\n    const __switchPropertiesMenu = useState({ open: false })\n\n    const CTX = {\n        __quickMenuPosition,\n        __quickMenuState,\n        __selectedRoom,\n        __rooms,\n        __selectedPathPoints,\n        __pointer,\n        __doors,\n        __node,\n        __outletPropertiesMenu,\n        __switchPropertiesMenu\n    }\n\n    return (\n        <div\n            className=\"App\"\n            style={{ overscrollBehavior: \"none\" }}\n            onContextMenu={e => e.preventDefault()}\n        >\n            <RoomContext.Provider value={CTX}>\n                <Plan />\n                <QuickMenu />\n                <OutletPropertiesMenu />\n                <SwitchPropertiesMenu />\n            </RoomContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n            window.location.href,\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}