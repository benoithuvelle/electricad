{"version":3,"sources":["RoomContext.tsx","components/Background.tsx","utils.ts","components/Floor.tsx","components/Point.tsx","components/Segment.tsx","components/Size.tsx","components/Door.tsx","components/ELECTRICAL/Outlet.tsx","components/ELECTRICAL/Switch.js","components/Room.tsx","components/Plan.tsx","components/UI/QuickMenu.tsx","components/UI/OutletPropertiesMenu.jsx","components/UI/SwitchPropertiesMenu.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RoomContext","createContext","Background","width","height","useContext","__selectedRoom","__rooms","rooms","setRooms","setSelectedRoom","addRoom","e","id","window","prompt","find","room","alert","x","clientX","y","clientY","points","getPoints","this","reduce","acc","curr","i","absX","absY","offsetX","offsetY","doors","outlets","switches","style","tabIndex","fill","onDoubleClick","onClick","onKeyDown","keyCode","getPath","current","push","length","getAllPoints","roomPoints","getPointCoords","clickCoords","pathPoints","a","b","m","p","isFinite","project","atob","len","dot","t","Math","min","max","point","left","Floor","polygon","stroke","strokeWidth","Point","visible","roomIndex","findIndex","handle","onDrag","dnd","deltaX","deltaY","onStop","forEach","otherPoint","abs","className","cx","cy","r","textAnchor","alignmentBaseline","pointerEvents","Segment","__quickMenuPosition","__quickMenuState","__selectedPathPoints","__pointer","__pathNode","setQuickMenuPosition","setQuickMenuState","setSelectedPathPoints","setPointer","setPathNode","useState","isDragging","setIsDragging","data","path","line","d","segmentClicked","preventDefault","coords","type","console","log","originalEvent","changedTouches","prev","target","allPoints","pathPoint","cancel","visibility","strokeLinecap","strokeLinejoin","opacity","Size","dx","dy","c","round","floor","sqrt","startOffset","xlinkHref","Door","door","pointsIds","doorCenter","doorId","split","side1","side2","p1","p2","newDoorCenter","newPoint","x1","y1","x2","y2","Outlet","outlet","__outletPropertiesMenu","setOutletPropertiesMenu","anchorPoint","props","outletId","grounding","shutter","angle","atan2","PI","newAnchorPoint","open","transform","fontSize","Switch","__switch","__switchPropertiesMenu","setSwitchPropertiesMenu","switchId","way","pole","dimmer","illuminated","Room","isSelected","disabled","newRooms","filter","el","outline","map","join","index","key","Plan","selectedRoom","innerWidth","innerHeight","xmlns","xmlnsXlink","sort","QuickMenu","quickMenuPosition","quickMenuState","selectedPathPoints","pointer","handleClose","Menu","transitionDuration","enter","exit","anchorReference","anchorPosition","top","undefined","onClose","MenuItem","persist","point1","point2","splice","OutletPropertiesMenu","outletPropertiesMenu","outletIndex","Dialog","aria-labelledby","DialogTitle","Grid","container","direction","spacing","item","xs","ToggleButtonGroup","exclusive","aria-label","value","onChange","ToggleButton","selected","justify","textAlign","handleGrounding","Button","variant","color","fullWidth","SwitchPropertiesMenu","switchPropertiesMenu","switchIndex","App","CTX","__doors","overscrollBehavior","onContextMenu","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wPAEaA,EAAcC,wBAAc,MCC1B,SAASC,EAAT,GAMX,IALAC,EAKD,EALCA,MACAC,EAID,EAJCA,OAID,EAEqCC,qBAAWL,GAAvCM,EAFT,EAESA,eAAgBC,EAFzB,EAEyBA,QAFzB,cAI2BA,EAJ3B,GAIQC,EAJR,KAIeC,EAJf,KAKOC,EAAkBJ,EAAe,GAEjCK,EAAU,SAACC,GACb,IAAMC,EAAKC,OAAOC,OAAO,kCAEzB,GAAW,KAAPF,GAAoB,OAAPA,EAEjB,GAAIL,EAAMQ,MAAK,SAACC,GAAD,OAAUA,EAAKJ,KAAOA,KACjCK,MAAM,0BAAD,OAAqBL,EAArB,uDADT,CAKA,IAAMI,EAAO,CACTJ,GAAIA,EACJM,EAAIP,EAAEQ,QAAUR,EAAEQ,QAAU,GAAKjB,EAAM,EACvCkB,EAAIT,EAAEU,QAAUV,EAAEU,QAAU,GAAKlB,EAAO,EACxCmB,OAAQ,CACJ,CAACJ,EAAI,EAAGE,EAAI,GACZ,CAACF,EAAI,EAAGE,EAAI,KACZ,CAACF,EAAI,IAAKE,EAAI,KACd,CAACF,EAAI,IAAKE,EAAI,IAElBG,UAVS,WAUI,IAAD,OACR,OAAOC,KAAKF,OAAOG,QAAO,SAACC,EAAKC,EAAMC,GAYlC,OAXAF,EAAIE,GAAK,CACLV,EAAIS,EAAKT,EACTE,EAAIO,EAAKP,EACTS,KAAOF,EAAKT,EAAI,EAAKA,EACrBY,KAAOH,EAAKP,EAAI,EAAKA,EACrBW,QAAU,EAAKb,EACfc,QAAU,EAAKZ,EACfQ,IACAZ,KAAOJ,EACPA,GAAE,UAAM,EAAKA,GAAX,YAAiBgB,IAEhBF,IACR,KAEPO,MAAQ,GACRC,QAAU,GACVC,SAAW,IAGf3B,EAAS,GAAD,mBAAKD,GAAL,CAAYS,KACpBP,EAAgBO,EAAKJ,MASzB,OACI,0BACIwB,MAAO,CAAC,QAAU,QAClBC,UAAW,EACXzB,GAAG,aACHV,MAAOA,EACPC,OAAQA,EACRmC,KAAK,UAELC,cAAe7B,EACf8B,QAAS,kBAAM/B,EAAgB,OAC/BgC,UAjBW,SAAA9B,GACG,KAAdA,EAAE+B,SACFhC,EAAQC,M,YC3Db,SAASgC,EAAQrB,GACpB,OAAOA,EAAOG,QAAO,SAACC,EAAKkB,EAAShB,GAOhC,OANAF,EAAIE,GAAK,CACLgB,GACAhB,EAAI,GACJF,EAAIE,EAAI,GAAGiB,KAAKD,GAEhBhB,IAAMN,EAAOwB,OAAS,GAAGpB,EAAIE,GAAGiB,KAAKnB,EAAI,GAAG,IACzCA,IACR,IAGA,SAASqB,EAAaxC,GAMzB,OALYA,EAAMkB,QAAO,SAACC,EAAKC,EAAMC,GACjC,IAAMoB,EAAarB,EAAKJ,YAExB,OADAG,EAAImB,KAAJ,MAAAnB,EAAG,YAASsB,IACLtB,IACR,IAIA,IAAMuB,EAAiB,SAACC,EAAaC,GAAe,kBACxCA,EADwC,GAChDC,EADgD,KAC7CC,EAD6C,mBAE1CH,EAF0C,GAElDhC,EAFkD,KAE/CE,EAF+C,KAOjDkC,GAAKD,EAAEjC,EAAIgC,EAAEhC,IAAMiC,EAAEnC,EAAIkC,EAAElC,GAE3BqC,EAAIH,EAAEhC,EAAIkC,EAAEF,EAAElC,EAUpB,OARU,IAANoC,EACAlC,EAAIgC,EAAEhC,EAEAoC,SAASF,GAGflC,EAAIkC,EAAEpC,EAAIqC,EAFVrC,EAAIkC,EAAElC,EAIH,CAAEA,IAAGE,MAiCT,SAASqC,EAASF,EAAGH,EAAGC,GAE3B,IAAIK,EAAYL,EAAEnC,EAAIkC,EAAElC,EAApBwC,EAA0BL,EAAEjC,EAAIgC,EAAEhC,EAElCuC,EAAMD,EAASA,EAASA,EAASA,EACjCE,GAFYL,EAAErC,EAAIkC,EAAElC,GAELwC,GAFWH,EAAEnC,EAAIgC,EAAEhC,GAEDsC,EACjCG,EAAIC,KAAKC,IAAK,EAAGD,KAAKE,IAAK,EAAGJ,EAAMD,IAIxC,OAFAC,GAAQP,EAAEnC,EAAIkC,EAAElC,IAAQqC,EAAEnC,EAAIgC,EAAEhC,IAAQiC,EAAEjC,EAAIgC,EAAEhC,IAAQmC,EAAErC,EAAIkC,EAAElC,GAEzD,CACH+C,MAAO,CACH/C,EAAGkC,EAAElC,EAAIwC,EAASG,EAClBzC,EAAGgC,EAAEhC,EAAIsC,EAASG,GAEtBK,KAAMN,EAAM,EACZA,IAAKA,EACLC,EAAGA,GC5FI,SAASM,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QAC5B,OAAO,6BACH9C,OAAQ8C,EACR9B,KAAK,UACL+B,OAAO,YACPC,YAAa,ICmENC,MArEf,YAAqC,IAApBN,EAAmB,EAAnBA,MAAOO,EAAY,EAAZA,QAEZlE,EAAYF,qBAAWL,GAAvBO,QAFwB,cAGNA,EAHM,GAGzBC,EAHyB,KAGlBC,EAHkB,KAK1BiE,EAAYlE,EAAMmE,WAAU,SAAA1D,GAAI,OAAIA,EAAKJ,KAAOqD,EAAMjD,QAE5D,OAAKwD,EAgCD,kBAAC,gBAAD,CACIG,OAAO,UACPC,OA9BS,SAACjE,EAAQkE,GAEtBtE,EAAMkE,GAAWnD,OAAO2C,EAAMrC,GAAGV,EAAI+C,EAAM/C,EAAI2D,EAAIC,OACnDvE,EAAMkE,GAAWnD,OAAO2C,EAAMrC,GAAGR,EAAI6C,EAAM7C,EAAIyD,EAAIE,OAEnDvE,EAAS,YAAID,KA0BTyE,OAvBQ,WAEIjC,EAAaxC,GAGnB0E,SAAQ,SAAAC,GACVA,EAAWlE,OAASiD,EAAMjD,MAAQkE,EAAWtD,IAAMqC,EAAMrC,IACrDkC,KAAKqB,IAAIlB,EAAMpC,KAAOqD,EAAWrD,MAAQ,KACzCtB,EAAMkE,GAAWnD,OAAO2C,EAAMrC,GAAGV,EAAIgE,EAAWrD,KAAOoC,EAAMlC,SAE7D+B,KAAKqB,IAAIlB,EAAMnC,KAAOoD,EAAWpD,MAAQ,KACzCvB,EAAMkE,GAAWnD,OAAO2C,EAAMrC,GAAGR,EAAI8D,EAAWpD,KAAOmC,EAAMjC,aAKzExB,EAAS,YAAID,MAST,2BACI,4BACI6E,UAAU,SACVC,GAAIpB,EAAM/C,EACVoE,GAAIrB,EAAM7C,EACVmE,EAAG,GACHjD,KAAM,QACN+B,OAAQ,UACRC,YAAa,IAEjB,0BACIpD,EAAG+C,EAAM/C,EACTE,EAAG6C,EAAM7C,EACToE,WAAW,SACXC,kBAAkB,UAClBC,cAAc,OACdpD,KAAK,QAEJ2B,EAAMrC,KAtDZ,M,QCPA,SAAS+D,EAAT,GAA4C,IAAzBxC,EAAwB,EAAxBA,WAAYqB,EAAY,EAAZA,QAAY,EAEkDpE,qBAAWL,GAA3G6F,EAF8C,EAE9CA,oBAAqBC,EAFyB,EAEzBA,iBAAkBC,EAFO,EAEPA,qBAAsBxF,EAFf,EAEeA,QAASyF,EAFxB,EAEwBA,UAAWC,EAFnC,EAEmCA,WAEnFC,EAAuBL,EAAoB,GAC3CM,EAAoBL,EAAiB,GACrCM,EAAwBL,EAAqB,GANG,cAO5BxF,EAP4B,GAO/CC,EAP+C,KAOxCC,EAPwC,KAQhD4F,EAAaL,EAAU,GACvBM,EAAcL,EAAW,GATuB,EAWlBM,oBAAS,GAXS,mBAW/CC,EAX+C,KAWnCC,EAXmC,mBAazCrD,EAbyC,GAajDC,EAbiD,KAa9CC,EAb8C,KAehDoB,EAAYlE,EAAMmE,WAAU,SAAA1D,GAAI,OAAIA,EAAKJ,KAAOwC,EAAEpC,QAEpDyF,EAAO,CAAC,CAACrD,EAAElC,EAAGkC,EAAEhC,GAAI,CAACiC,EAAEnC,EAAGmC,EAAEjC,IAE5BsF,EAAOC,cACNzF,GAAE,SAAC0F,GAAD,OAAOA,EAAE,MACXxF,GAAE,SAACwF,GAAD,OAAOA,EAAE,MA8CVC,EAAiB,SAAAlG,GACnBA,EAAEmG,iBAEF,IAAIC,EAAS,CAAE7F,EAAI,KAAME,EAAI,MAEd,YAAXT,EAAEqG,MACFD,EAAO7F,EAAIP,EAAEQ,QACb4F,EAAO3F,EAAIT,EAAEU,QACb+E,EAAWW,KAEXE,QAAQC,IAAIvG,GACZsG,QAAQC,IAAIvG,EAAEwG,eACdJ,EAAO7F,EAAIP,EAAEyG,eAAe,GAAGjG,QAC/B4F,EAAO3F,EAAIT,EAAEyG,eAAe,GAAG/F,QAC/B+E,EAAWW,IAIfd,EAAqBc,GACrBb,GAAkB,SAAAmB,GAAI,OAAKA,KAC3BlB,EAAsBhD,GACtBkD,EAAY1F,EAAE2G,SAOlB,OACI,kBAAC,gBAAD,CACI3C,OAAO,WAEPC,OA5ES,SAACjE,EAAGkE,GAEjB2B,GAAc,GAEdpD,EAAElC,GAAK2D,EAAIC,OACX1B,EAAEhC,GAAKyD,EAAIE,OAEX1B,EAAEnC,GAAK2D,EAAIC,OACXzB,EAAEjC,GAAKyD,EAAIE,OAEXxE,EAAMkE,GAAWnD,OAAO8B,EAAExB,GAAGV,EAAIkC,EAAElC,EACnCX,EAAMkE,GAAWnD,OAAO8B,EAAExB,GAAGR,EAAIgC,EAAEhC,EAEnCb,EAAMkE,GAAWnD,OAAO+B,EAAEzB,GAAGV,EAAImC,EAAEnC,EACnCX,EAAMkE,GAAWnD,OAAO+B,EAAEzB,GAAGR,EAAIiC,EAAEjC,EAEnCZ,EAAS,YAAID,KA6DTyE,OA1DQ,SAACrE,EAAGkE,GAEhB,GAAK0B,EAAL,CAIAC,GAAc,GAEd,IAAIe,EAAYxE,EAAaxC,GAE7B4C,EAAW8B,SAAQ,SAAAuC,GACfD,EAAUtC,SAAQ,SAAAhB,GACVuD,EAAU5G,KAAOqD,EAAMrD,KACnBkD,KAAKqB,IAAIqC,EAAU3F,KAAOoC,EAAMpC,OAAS,KACzCtB,EAAMkE,GAAWnD,OAAOkG,EAAU5F,GAAGV,EAAI+C,EAAMpC,KAAO2F,EAAUzF,SAEhE+B,KAAKqB,IAAIqC,EAAU1F,KAAOmC,EAAMnC,OAAS,KACzCvB,EAAMkE,GAAWnD,OAAOkG,EAAU5F,GAAGR,EAAI6C,EAAMnC,KAAO0F,EAAUxF,gBAKhFxB,EAAS,YAAID,SAnBTsG,EAAelG,IAwDf8G,OAAO,wBAEP,0BACIrF,MAAOoC,EAAU,CAAEkD,WAAY,WAAc,CAAEA,WAAY,UAC3Dd,EAAGF,EAAKD,GACR7F,GAAIwC,EAAEpC,KAAO,IAAMoC,EAAExB,EAAI,IAAMyB,EAAEzB,EACjCwD,UAAU,UACVd,YAAa,GACbD,OAAO,UACPsD,cAAc,QACdC,eAAe,QACfC,QAAS,MC9FVC,MAtBf,YAAsC,IAAvB3E,EAAsB,EAAtBA,WAAYqB,EAAU,EAAVA,QAAU,cAClBrB,EADkB,GAC1BC,EAD0B,KACvBC,EADuB,KAG7B0E,EAAK3E,EAAElC,EAAImC,EAAEnC,EACb8G,EAAK5E,EAAEhC,EAAIiC,EAAEjC,EAEb6G,EAAInE,KAAKoE,MAAiD,EAA3CpE,KAAKqE,MAAMrE,KAAKsE,KAAKL,EAAKA,EAAKC,EAAKA,GAAI,IAG3D,OAAKxD,EAKD,0BAAMpC,MAAO,CAACsD,cAAc,OAAQpD,KAAK,YACrC,8BAAU+F,YAAY,MAAMC,UAAW,IAAMlF,EAAEpC,KAAO,IAAMoC,EAAExB,EAAI,IAAMyB,EAAEzB,GACrEqG,IANF,M,qOCPA,SAASM,EAAT,GAA4B,IAAZC,EAAW,EAAXA,KAAM5G,EAAK,EAALA,EAEzBtB,EAAYF,qBAAWL,GAAvBO,QAF8B,cAIZA,EAJY,GAI/BC,EAJ+B,KAIxBC,EAJwB,KAM9BiI,EAAkCD,EAAlCC,UAAWC,EAAuBF,EAAvBE,WAAYC,EAAWH,EAAXG,OAEzB3H,EAAOT,EAAMQ,MAAK,qBAAGH,KAAgB6H,EAAUrF,EAAEwF,MAAM,KAAK,MAE5DxF,EAAIpC,EAAKO,YAAYR,MAAK,qBAAGH,KAAgB6H,EAAUrF,KACvDC,EAAIrC,EAAKO,YAAYR,MAAK,qBAAGH,KAAgB6H,EAAUpF,KAEvDwF,EAAQ,CAAE3H,EAAGwH,EAAWxH,EAAI,GAAIE,EAAGsH,EAAWtH,EAAI,IAClD0H,EAAQ,CAAE5H,EAAGwH,EAAWxH,EAAI,GAAIE,EAAGsH,EAAWtH,EAAI,IAIlD2H,EAAKtF,EAAQoF,EAAOzF,EAAGC,GAAGY,MAC1B+E,EAAKvF,EAAQqF,EAAO1F,EAAGC,GAAGY,MAehC,OAEI,kBAAC,gBAAD,CACIU,OAAO,cACPC,OAjBS,SAACjE,EAAGkE,GAEjB,IAAMoE,E,yVAAa,IAAQP,GAC3BO,EAAc/H,GAAK2D,EAAIC,OACvBmE,EAAc7H,GAAKyD,EAAIE,OAEvB,IAAMmE,EAAWzF,EAAQwF,EAAe7F,EAAGC,GAE3CrC,EAAKiB,MAAML,GAAG8G,WAAWxH,EAAIgI,EAASjF,MAAM/C,EAC5CF,EAAKiB,MAAML,GAAG8G,WAAWtH,EAAI8H,EAASjF,MAAM7C,EAC5CZ,EAAS,YAAID,MAUT,0BACI6E,UAAU,aACVxE,GAAI+H,EACJQ,GAAIJ,EAAG7H,EACPkI,GAAIL,EAAG3H,EACPiI,GAAIL,EAAG9H,EACPoI,GAAIN,EAAG5H,EACPkB,KAAK,UACL+B,OAAO,UACPC,YAAa,K,yjBCyEdiF,MA1Hf,YAAgC,IAAdC,EAAa,EAAbA,OAAQ5H,EAAK,EAALA,EAAK,EAEiBxB,qBAAWL,GAA/CO,EAFmB,EAEnBA,QAASmJ,EAFU,EAEVA,uBAFU,cAGDnJ,EAHC,GAGpBC,EAHoB,KAGbC,EAHa,mBAI6BiJ,EAJ7B,GAIEC,GAJF,WAMnBC,EAA4CH,EAA5CG,YAAalB,EAA+Be,EAA/Bf,UAAqBmB,GAAUJ,EAApBK,SAAoBL,EAAVI,OAElCE,EAA6BF,EAA7BE,UAAWC,EAAkBH,EAAlBG,QAAS/C,EAAS4C,EAAT5C,KAGtBhG,EAAOT,EAAMQ,MAAK,qBAAGH,KAAgB6H,EAAUrF,EAAEwF,MAAM,KAAK,MAE5DxF,EAAIpC,EAAKO,YAAYR,MAAK,qBAAGH,KAAgB6H,EAAUrF,KACvDC,EAAIrC,EAAKO,YAAYR,MAAK,qBAAGH,KAAgB6H,EAAUpF,KAEvD0D,EAAStD,EAAQkG,EAAavG,EAAGC,GAAGY,MAEtC+F,EAA4C,IAAnClG,KAAKmG,MAAM5G,EAAEjC,EAAIgC,EAAEhC,EAAGiC,EAAEnC,EAAIkC,EAAElC,GAAW4C,KAAKoG,GAAM,GAgBjE,OACI,kBAAC,gBAAD,CACIvF,OAAO,UACPC,OAjBS,SAACjE,EAAGkE,GAEjB,IAAMsF,EAAc,KAAQR,GAC5BQ,EAAejJ,GAAK2D,EAAIC,OACxBqF,EAAe/I,GAAKyD,EAAIE,OAExB,IAAMmE,EAAWzF,EAAQ0G,EAAgB/G,EAAGC,GAE5CrC,EAAKkB,QAAQN,GAAG+H,YAAYzI,EAAIgI,EAASjF,MAAM/C,EAC/CF,EAAKkB,QAAQN,GAAG+H,YAAYvI,EAAI8H,EAASjF,MAAM7C,EAC/CZ,EAAS,YAAID,MAST,uBACI6E,UAAU,SACVhD,MAAO,CAAEsD,cAAe,OACxBlD,QAAS,WACLkH,GAAwB,SAAArC,GAAU,OAAO,KAAKA,EAAZ,CAAkB+C,MAAM,EAAMZ,OAAQA,SAO5E,uBACI5I,GAAG,IACHyJ,UAAS,oBAAetD,EAAO7F,EAAtB,YAA2B6F,EAAO3F,EAAlC,gCAA2D4I,EAA3D,MAET,0BACIK,UAAW,+BACXC,SAAU,OAEA,IAATtD,EAAa,KAAOA,GAEzB,uBAAGpG,GAAG,IACFyJ,UAAS,kBAGT,0BACIzD,EAAE,yBACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,OACLoF,YAA0B,IAAdoC,EAAqB,UAAY,WAGjD,0BACIlD,EAAE,uBACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,OACLoF,YAAwB,IAAZqC,EAAmB,UAAY,WAI/C,0BACInD,EAAE,yBACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,OACLoF,YAAwB,IAAZqC,EAAmB,UAAY,WAI/C,0BACInD,EAAE,+EACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,SAGT,0BACIsE,EAAE,sBACFhG,GAAG,SACHyD,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,c,yjBCUlBiI,MA1Hf,YAAkC,IAAhBC,EAAe,EAAfA,SAAU5I,EAAK,EAALA,EAAK,EAEexB,qBAAWL,GAA/CO,EAFqB,EAErBA,QAASmK,EAFY,EAEZA,uBAFY,cAGHnK,EAHG,GAGtBC,EAHsB,KAGfC,EAHe,mBAI2BiK,EAJ3B,GAIAC,GAJA,WAMrBf,EAA4Ca,EAA5Cb,YAAalB,EAA+B+B,EAA/B/B,UAAqBmB,GAAUY,EAApBG,SAAoBH,EAAVZ,OAElCgB,EAAyChB,EAAzCgB,IAAKC,EAAoCjB,EAApCiB,KAA2B7D,GAAS4C,EAA9BkB,OAA8BlB,EAAtBmB,YAAsBnB,EAAT5C,MAGlChG,EAAOT,EAAMQ,MAAK,qBAAGH,KAAgB6H,EAAUrF,EAAEwF,MAAM,KAAK,MAE5DxF,EAAIpC,EAAKO,YAAYR,MAAK,qBAAGH,KAAgB6H,EAAUrF,KACvDC,EAAIrC,EAAKO,YAAYR,MAAK,qBAAGH,KAAgB6H,EAAUpF,KAEvD0D,EAAStD,EAAQkG,EAAavG,EAAGC,GAAGY,MAEtC+F,EAA4C,IAAnClG,KAAKmG,MAAM5G,EAAEjC,EAAIgC,EAAEhC,EAAGiC,EAAEnC,EAAIkC,EAAElC,GAAW4C,KAAKoG,GAAM,GAgBjE,OACI,kBAAC,gBAAD,CACIvF,OAAO,UACPC,OAjBS,SAACjE,EAAGkE,GAEjB,IAAMsF,EAAc,KAAQR,GAC5BQ,EAAejJ,GAAK2D,EAAIC,OACxBqF,EAAe/I,GAAKyD,EAAIE,OAExB,IAAMmE,EAAWzF,EAAQ0G,EAAgB/G,EAAGC,GAE5CrC,EAAKmB,SAASP,GAAG+H,YAAYzI,EAAIgI,EAASjF,MAAM/C,EAChDF,EAAKmB,SAASP,GAAG+H,YAAYvI,EAAI8H,EAASjF,MAAM7C,EAChDZ,EAAS,YAAID,MAST,uBACI6E,UAAU,SACVhD,MAAO,CAAEsD,cAAe,OACxBlD,QAAS,WACLkI,GAAwB,SAAArD,GAAU,OAAO,KAAKA,EAAZ,CAAkB+C,MAAM,EAAMI,SAAUA,SAI9E,uBAAG5J,GAAG,IACFyJ,UAAS,oBAAetD,EAAO7F,EAAtB,YAA2B6F,EAAO3F,EAAlC,gCAA2D4I,EAA3D,MAET,uBAAGpJ,GAAG,KAEF,0BACIgG,EAAE,oFACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,SAIT,0BACIsE,EAAE,yBACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,OACLoF,WAAsB,IAATmD,GAAuB,WAAT7D,EAAoB,UAAY,WAI/D,0BACIJ,EAAE,oCACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,OACLoF,WAAsB,SAATV,EAAkB,SAAW,YAE9C,0BACIJ,EAAE,kFACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,OACLoF,WAA+C,WAGnD,0BACId,EAAE,0BACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,OACLoF,WAAsB,IAATmD,GAAuB,WAAT7D,EAAoB,UAAY,WAG/D,0BACIJ,EAAE,kCACFvC,OAAO,QACPsD,cAAc,QACdC,eAAe,QACftD,YAAa,EACbhC,KAAK,OACLoF,WAAqB,IAARkD,GAAsB,WAAT5D,EAAoB,UAAY,gBCiCvEgE,MAxIf,YAII,IRhBuB1J,EQavB2J,EAGD,EAHCA,WACAjK,EAED,EAFCA,KACAY,EACD,EADCA,EACD,EAEqCxB,qBAAWL,GAAvCO,EAFT,EAESA,QAASD,EAFlB,EAEkBA,eAFlB,cAG2BC,EAH3B,GAGQC,EAHR,KAGeC,EAHf,KAIOC,EAAkBJ,EAAe,GA6CvC,OACI,kBAAC,gBAAD,CACIsE,OAAO,QACP8C,OAAO,mDACPyD,UAAWD,EACXjG,OA5BU,WAEd,IAAMuC,EAAYxE,EAAaxC,GAE/BS,EAAKO,YAAY0D,SAAQ,SAAAhB,GACrBsD,EAAUtC,SAAQ,SAAAC,GAEd,IAAI6C,EAAKjE,KAAKqB,IAAIlB,EAAMpC,KAAOqD,EAAWrD,MACtCmG,EAAKlE,KAAKqB,IAAIlB,EAAMnC,KAAOoD,EAAWpD,MAEtCmC,EAAMjD,OAASkE,EAAWlE,OACtB+G,GAAM,KACNxH,EAAMqB,GAAGN,OAAO2C,EAAMrC,GAAGV,EAAIgE,EAAWrD,KAAOoC,EAAMlC,SAErDiG,GAAM,KACNzH,EAAMqB,GAAGN,OAAO2C,EAAMrC,GAAGR,EAAI8D,EAAWpD,KAAOmC,EAAMjC,gBAKrExB,EAAS,YAAID,KASTqE,OAvCS,SAACjE,EAAQkE,GACtBlE,EAAEmG,iBAEF,IAAMqE,EAAQ,YAAO5K,GACrB4K,EAASvJ,GAAGV,GAAK2D,EAAIC,OACrBqG,EAASvJ,GAAGR,GAAKyD,EAAIE,OAErBvE,EAAS2K,KAkCL,uBACI/F,UAAW,OACXxE,GAAII,EAAKJ,GACTyJ,UAAS,oBAAerJ,EAAKE,EAApB,YAAyBF,EAAKI,EAA9B,KACToB,QAAS,WACL/B,EAAgBO,EAAKJ,KAEzB6B,UAxDO,SAAC9B,GACZsK,GACkB,IAAdtK,EAAE+B,SACFlC,GAAS,SAACD,GAAD,OAAgBA,EAAM6K,QAAO,SAACC,GAAD,OAAaA,EAAGzK,KAAOI,EAAKJ,UAsDlEyB,UAAW,EACXD,MAAO,CAAEkJ,QAAS,IAElB,kBAACnH,EAAD,CACIC,SRrFO9C,EQqFaN,EAAKO,YRpFlCD,EAAOiK,KAAI,SAACtH,GAAD,MAAW,CAACA,EAAM/C,EAAG+C,EAAM7C,GAAGoK,KAAK,WQwFrC7I,EAAQ3B,EAAKO,aAAagK,KAAI,SAACpI,EAAYsI,GAAb,OAC1B,kBAAC9F,EAAD,CACI+F,IAAKD,EACLtI,WAAYA,EACZqB,QAASyG,OAMjBjK,EAAKO,YAAYgK,KAAI,SAACtH,EAAOwH,GAAR,OACjB,kBAAC,EAAD,CACIC,IAAKD,EACLxH,MAAOA,EACPO,QAASyG,OAKjBtI,EAAQ3B,EAAKO,aAAagK,KAAI,SAACpI,EAAYsI,GAAb,OAC1B,kBAAC,EAAD,CACIC,IAAKD,EACLtI,WAAYA,EACZqB,QAASyG,OAKjBjK,EAAKiB,MAAMsJ,KAAI,SAAC/C,EAAM5G,GAAP,OACX,kBAAC2G,EAAD,CACImD,IAAK9J,EACL4G,KAAMA,EACN5G,EAAGA,OAKXZ,EAAKkB,QAAQqJ,KAAI,SAAC/B,EAAQ5H,GAAT,OACb,kBAAC,EAAD,CACI8J,IAAK9J,EACL4H,OAAQA,EACR5H,EAAGA,OAKXZ,EAAKmB,SAASoJ,KAAI,SAACf,EAAU5I,GAAX,OACd,kBAAC,EAAD,CACI8J,IAAK9J,EACL4I,SAAUA,EACV5I,EAAGA,UCtIhB,SAAS+J,IAAQ,IAAD,EAESvL,qBAAWL,GAAvCO,EAFmB,EAEnBA,QAASD,EAFU,EAEVA,eAEVE,EAJoB,YAIXD,EAJW,MAKpBsL,EALoB,YAKJvL,EALI,MAMrBH,EAAQW,OAAOgL,WACf1L,EAASU,OAAOiL,YAEtB,OACI,yBACIlL,GAAG,OACHV,MAAOA,EACPC,OAAQA,EACR4L,MAAM,6BACNC,WAAW,gCAGX,kBAAC/L,EAAD,CACIC,MAAOA,EACPC,OAAQA,IAIRI,EACK0L,MAAK,SAAC7I,EAAGC,GACN,IAAM4E,EAAK7E,EAAExC,KAAOgL,EAEpB,OAAQ3D,KADG5E,EAAEzC,KAAOgL,GACD,EAAI3D,EAAI,GAAM,KAEpCsD,KAAI,SAACvK,EAAMY,GACR,OACI,kBAAC,EAAD,CACI8J,IAAK1K,EAAKJ,GACVqK,WAAYW,IAAiB5K,EAAKJ,GAClCI,KAAMA,EACNY,EAAGA,OAOnBrB,EAAMkB,QAAO,SAACC,EAAKC,EAAMC,GAErB,OADAF,EAAImB,KAAJ,MAAAnB,EAAG,YAASC,EAAKM,QACVP,IACT,IAAI6J,KAAI,SAAC/C,EAAK5G,GACZ,IAAMZ,EAAOT,EAAMQ,MAAK,qBAAEH,KAAe4H,EAAKG,OAAOC,MAAM,KAAK,MAI5D,OAHJ3B,QAAQC,IAAI,IAAMsB,EAAKG,QAIf,yBACA+C,IAAK9J,EACL0G,UAAW,IAAME,EAAKG,OACtB0B,UAAS,oBAAerJ,EAAKE,EAApB,YAAyBF,EAAKI,EAA9B,W,mlBCvDrC,IA8Je8K,EA9JG,WAAO,IAAD,EAUhB9L,qBAAWL,GAPX6F,EAHgB,EAGhBA,oBACAC,EAJgB,EAIhBA,iBACAC,EALgB,EAKhBA,qBACAxF,EANgB,EAMhBA,QACAyF,EAPgB,EAOhBA,UACA0D,EARgB,EAQhBA,uBACAgB,EATgB,EAShBA,uBATgB,cAY8B7E,EAZ9B,GAYbuG,EAZa,KAYMlG,EAZN,mBAawBJ,EAbxB,GAabuG,EAba,KAaGlG,EAbH,KAcbmG,EAda,YAcSvG,EAdT,oBAeMxF,EAfN,GAebC,EAfa,KAeNC,EAfM,KAgBb8L,EAhBa,YAgBFvG,EAhBE,oBAiBoC0D,EAjBpC,GAiBSC,GAjBT,yBAkBoCe,EAlBpC,GAkBSC,GAlBT,WAoBd6B,EAAc,WAChBrG,GAAkB,GAClBD,EAAqB,OAmHzB,OACI,kBAACuG,EAAA,EAAD,CACI5L,GAAG,YACH6L,mBAAoB,CAAEC,MAAO,EAAGC,KAAM,GACtCC,gBAAgB,iBAChBC,eAC0B,OAAtBV,EACM,CAAEW,IAAKX,EAAkB/K,EAAG8C,KAAMiI,EAAkBjL,QACpD6L,EAEV3C,KAAMgC,EACNY,QAAST,GAET,kBAACU,EAAA,EAAD,CAAUzK,QA7HA,SAAA7B,GACdA,EAAEuM,UADiB,IAGZ9J,EAHY,YAGPiJ,EAHO,MAIb5H,EAAYlE,EAAMmE,WAAU,SAAA1D,GAAI,OAAIA,EAAKJ,KAAOwC,EAAEpC,QAElDE,EAAIoL,EAAQpL,EAAIX,EAAMkE,GAAWvD,EACjCE,EAAIkL,EAAQlL,EAAIb,EAAMkE,GAAWrD,EAEjC8H,EAAWjG,EAAe,CAAC/B,EAAGE,GAAIiL,GAExCtJ,EAAaxC,GAAO0E,SAAQ,SAAAhB,GAEpBH,KAAKqB,IAAIlB,EAAMpC,MAAQqH,EAAShI,EAAIX,EAAMkE,GAAWvD,IAAM,KAC3DgI,EAAShI,EAAI+C,EAAMpC,KAAOtB,EAAMkE,GAAWvD,GAE3C4C,KAAKqB,IAAIlB,EAAMnC,MAAQoH,EAAS9H,EAAIb,EAAMkE,GAAWrD,IAAM,KAC3D8H,EAAS9H,EAAI6C,EAAMnC,KAAOvB,EAAMkE,GAAWrD,MAInD,IAAM+L,EAAM,KAAQjE,GACdkE,EAAM,KAAQlE,GAEpB3I,EAAMkE,GAAWnD,OAAO+L,OAAOjK,EAAExB,EAAI,EAAG,EAAGuL,EAAQC,GACnD5M,EAAS,YAAID,IAEbgM,MAkGI,cACA,kBAACU,EAAA,EAAD,CAAUzK,QAhGF,WAAO,IAAD,cAEH6J,EAFG,GAEXjJ,EAFW,KAERC,EAFQ,KAIZoB,EAAYlE,EAAMmE,WAAU,SAAA1D,GAAI,OAAIA,EAAKJ,KAAOwC,EAAEpC,QAElDE,EAAIoL,EAAQpL,EAAIX,EAAMkE,GAAWvD,EACjCE,EAAIkL,EAAQlL,EAAIb,EAAMkE,GAAWrD,EAEjCsH,EAAazF,EAAe,CAAC/B,EAAGE,GAAIiL,GACpC1D,EAASpI,EAAMkE,GAAW7D,GAAK,SAAWL,EAAMkE,GAAWxC,MAAMa,OAKjE0F,EAAO,CAAEC,UAFG,CAAErF,EAAGA,EAAExC,GAAIyC,EAAGA,EAAEzC,IAER8H,aAAYC,UAEtCpI,EAAMkE,GAAWxC,MAAMY,KAAK2F,GAE5BhI,EAAS,YAAID,IAEbgM,MA2EI,YACA,kBAACU,EAAA,EAAD,CAAUzK,QAxEA,SAAA7B,GAAM,IAAD,cACJ0L,EADI,GACZjJ,EADY,KACTC,EADS,KAGbrC,EAAOT,EAAMQ,MAAK,qBAAGH,KAAgBwC,EAAEpC,QAEvCE,EAAIoL,EAAQpL,EAAIF,EAAKE,EACrBE,EAAIkL,EAAQlL,EAAIJ,EAAKI,EAErBqH,EAAY,CAAErF,EAAGA,EAAExC,GAAIyC,EAAGA,EAAEzC,IAI5BgJ,EAAQ,CACV5C,KAAM,EACN8C,WAAW,EACXC,SAAS,GAGPP,EAAS,CAAEG,YATG1G,EAAe,CAAC/B,EAAGE,GAAIiL,GASb5D,YAAW7H,GAR9BI,EAAKJ,GAAK,WAAaI,EAAKkB,QAAQY,OAQF8G,SAC7C3C,QAAQC,IAAI0C,GAEZ5I,EAAKkB,QAAQW,KAAK2G,GAClBE,GAAwB,SAAArC,GAAU,OAAO,KAAKA,EAAZ,CAAkB+C,MAAM,EAAMZ,OAAQA,OACxEhJ,EAAS,YAAID,IACbgM,MAgDI,cACA,kBAACU,EAAA,EAAD,CAAUzK,QA5CA,SAAA7B,GAAM,IAAD,cACJ0L,EADI,GACZjJ,EADY,KACTC,EADS,KAGbrC,EAAOT,EAAMQ,MAAK,qBAAGH,KAAgBwC,EAAEpC,QAEvCE,EAAIoL,EAAQpL,EAAIF,EAAKE,EACrBE,EAAIkL,EAAQlL,EAAIJ,EAAKI,EAErBqH,EAAY,CAAErF,EAAGA,EAAExC,GAAIyC,EAAGA,EAAEzC,IAY5B4J,EAAW,CAAEb,YAXC1G,EAAe,CAAC/B,EAAGE,GAAIiL,GAWX5D,YAAW7H,GAVhCI,EAAKJ,GAAK,WAAaI,EAAKmB,SAASW,OAUD8G,MARjC,CACVgB,IAAM,EACNC,KAAO,EACPC,QAAS,EACTC,aAAc,EACd/D,KAAO,WAKXhG,EAAKmB,SAASU,KAAK2H,GACnBE,GAAwB,SAAArD,GAAU,OAAO,KAAKA,EAAZ,CAAkB+C,MAAM,EAAMI,SAAUA,OAC1EhK,EAAS,YAAID,IACbgM,MAmBI,gB,8QC9CGe,MA3Gf,WAAiC,IAAD,EAEgBlN,qBAAWL,GAA/C0J,EAFoB,EAEpBA,uBAAwBnJ,EAFJ,EAEIA,QAFJ,cAI4BmJ,EAJ5B,GAIrB8D,EAJqB,KAIC7D,EAJD,mBAKFpJ,EALE,GAKrBC,EALqB,KAKdC,EALc,KAOpB4J,EAAiBmD,EAAjBnD,KAAMZ,EAAW+D,EAAX/D,OAEd,IAAKA,EACD,OAAO,KAGX,IAAM/E,EAAYlE,EAAMmE,WAAU,SAAA1D,GAAI,OAAIA,EAAKJ,KAAO4I,EAAO5I,GAAGgI,MAAM,KAAK,MACrE5H,EAAOT,EAAMQ,MAAK,qBAAGH,KAAgB4I,EAAO5I,GAAGgI,MAAM,KAAK,MAC1D4E,EAAcxM,EAAKkB,QAAQwC,WAAW,SAAA2G,GAAE,OAAIA,EAAGzK,KAAO4I,EAAO5I,MAfvC,EAgBTI,EAAKkB,QAAQnB,MAAK,qBAAGH,KAAgB4I,EAAO5I,MAEfgJ,MAAxCE,EAlBoB,EAkBpBA,UAAWC,EAlBS,EAkBTA,QAAS/C,EAlBA,EAkBAA,KA6B5B,OACI,kBAACyG,EAAA,EAAD,CAAQC,kBAAgB,sBAAsBtD,KAAMA,EAAM4C,QA5B1C,WAChBtD,GAAwB,SAAArC,GAAU,O,yVAAO,IAAKA,EAAZ,CAAkB+C,MAAM,SA4BtD,kBAACuD,EAAA,EAAD,CAAa/M,GAAG,uBAAhB,yBAEA,kBAACgN,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAS,GACxC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACJ,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,UAEV,kBAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,aAAW,iBACXC,MAAOrH,EACXsH,SArBL,SAAC3N,EAAG0N,GACnB9N,EAAMkE,GAAWvC,QAAQsL,GAAa5D,MAAM5C,KAAOqH,EACnD7N,EAAS,YAAID,MAsBW,kBAACgO,EAAA,EAAD,CAAcF,MAAO,EAAGG,SAAmB,IAATxH,GAAlC,OACA,kBAACuH,EAAA,EAAD,CAAcF,MAAO,EAAGG,SAAmB,IAATxH,GAAlC,OACA,kBAACuH,EAAA,EAAD,CAAcF,MAAO,EAAGG,SAAmB,IAATxH,GAAlC,SACA,kBAACuH,EAAA,EAAD,CAAcF,MAAO,EAAGG,SAAmB,IAATxH,GAAlC,QACA,kBAACuH,EAAA,EAAD,CAAcF,MAAO,EAAGG,SAAmB,IAATxH,GAAlC,YAKhB,kBAAC4G,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAQ,SAASV,QAAS,GAEtC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG7L,MAAO,CAAEsM,UAAW,WAClC,kBAACH,EAAA,EAAD,CACIF,MAAOvE,EACP0E,SAAU1E,EACVwE,SAAU,SAAC3N,EAAG0N,GAAJ,OAzDd,SAAC1N,EAAG0N,GACxBpH,QAAQC,IAAIvG,GAEZJ,EAAMkE,GAAWvC,QAAQsL,GAAa5D,MAAME,WAAauE,EAEzD7N,EAAS,YAAID,IACb0G,QAAQC,IAAI3G,GAmDoCoO,CAAgBhO,EAAG0N,KAH/C,cAQJ,kBAACT,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG7L,MAAO,CAAEsM,UAAW,WAClC,kBAACH,EAAA,EAAD,CACIF,MAAOtE,EACPyE,SAAUzE,EACduE,SAzDF,SAAC3N,EAAG0N,GACtBpH,QAAQC,IAAIvG,GAEZJ,EAAMkE,GAAWvC,QAAQsL,GAAa5D,MAAMG,SAAWsE,EAEvD7N,EAAS,YAAID,MAiDO,cASZ,kBAACqN,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CAAQpM,QAAS,kBAAMkH,EAAwB,CAAEU,MAAM,KAAUyE,QAAQ,YAAYC,MAAM,UAAUC,WAAS,GAA9G,Y,8NCgFLC,MAjLf,WAAiC,IAAD,EAEgB5O,qBAAWL,GAA/C0K,EAFoB,EAEpBA,uBAAwBnK,EAFJ,EAEIA,QAFJ,cAI4BmK,EAJ5B,GAIrBwE,EAJqB,KAICvE,EAJD,mBAKFpK,EALE,GAKrBC,EALqB,KAKdC,EALc,KAOpB4J,EAAmB6E,EAAnB7E,KAAMI,EAAayE,EAAbzE,SAEd,IAAKA,EACD,OAAO,KAViB,MAaqBA,EAASZ,MAAlDgB,EAboB,EAapBA,IAAKC,EAbe,EAafA,KAAMC,EAbS,EAaTA,OAAQC,EAbC,EAaDA,YAAa/D,EAbZ,EAaYA,KACxCC,QAAQC,IAAIsD,EAASZ,OAErB,IAAMnF,EAAYlE,EAAMmE,WAAU,SAAA1D,GAAI,OAAIA,EAAKJ,KAAO4J,EAAS5J,GAAGgI,MAAM,KAAK,MACvE5H,EAAOT,EAAMQ,MAAK,qBAAGH,KAAgB4J,EAAS5J,GAAGgI,MAAM,KAAK,MAC5DsG,EAAclO,EAAKmB,SAASuC,WAAU,SAAA2G,GAAE,OAAIA,EAAGzK,KAAO4J,EAAS5J,MAyCrE,OAxCqBI,EAAKmB,SAASpB,MAAK,qBAAGH,KAAgB4J,EAAS5J,MAyChE,kBAAC6M,EAAA,EAAD,CAAQC,kBAAgB,sBAAsBtD,KAAMA,EAAM4C,QAvC1C,WAChBtC,GAAwB,SAAArD,GAAU,O,yVAAO,IAAKA,EAAZ,CAAkB+C,MAAM,SAuCtD,kBAACuD,EAAA,EAAD,CAAa/M,GAAG,uBAAhB,yBAEA,kBAACgN,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAS,GACxC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACJ,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,UAEV,kBAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,aAAW,iBACXC,MAAOrH,EACPsH,SAjDT,SAAC3N,EAAG0N,GACnB9N,EAAMkE,GAAWtC,SAAS+M,GAAatF,MAAM5C,KAAOqH,EACpD7N,EAAS,YAAID,MAkDW,kBAACgO,EAAA,EAAD,CAAcF,MAAO,SAAUG,SAAmB,WAATxH,GAAzC,UACA,kBAACuH,EAAA,EAAD,CAAcF,MAAO,OAAQG,SAAmB,SAATxH,GAAvC,QACA,kBAACuH,EAAA,EAAD,CAAcF,MAAO,WAAYG,SAAmB,aAATxH,GAA3C,cAGR,kBAAC4G,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,aAAW,iBACXC,MAAOzD,EACP0D,SAzDV,SAAC3N,EAAG0N,GAElB9N,EAAMkE,GAAWtC,SAAS+M,GAAatF,MAAMgB,IAAMyD,EACnD7N,EAAS,YAAID,MAyDW,kBAACgO,EAAA,EAAD,CACIF,MAAO,EACPG,SAAkB,IAAR5D,GAAsB,WAAT5D,EACvBkE,SAAmB,WAATlE,GAHd,gBASA,kBAACuH,EAAA,EAAD,CACIF,MAAO,EACPG,SAAkB,IAAR5D,GAAsB,WAAT5D,EACvBkE,SAAmB,WAATlE,GAHd,kBASR,kBAAC4G,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,aAAW,iBACXC,MAAOxD,EACPyD,SA7ET,SAAC3N,EAAG0N,GAEnB9N,EAAMkE,GAAWtC,SAAS+M,GAAatF,MAAMiB,KAAOwD,EACpD7N,EAAS,YAAID,MA4EW,kBAACgO,EAAA,EAAD,CACIF,MAAO,EACPG,SAAmB,IAAT3D,GAAuB,WAAT7D,EACxBkE,SAAmB,WAATlE,GAHd,eASA,kBAACuH,EAAA,EAAD,CACIF,MAAO,EACPG,SAAmB,IAAT3D,GAAuB,WAAT7D,EACxBkE,SAAmB,WAATlE,GAHd,iBAWR,kBAAC4G,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACO,EAAA,EAAD,CACIF,MAAOvD,EACP0D,SAAU1D,EACVwD,SAjGP,SAAC3N,EAAG0N,GAErB9N,EAAMkE,GAAWtC,SAAS+M,GAAatF,MAAMkB,QAAUuD,EACvD7N,EAAS,YAAID,MA2FO,WAQJ,kBAACqN,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACO,EAAA,EAAD,CACIF,MAAOtD,EACPyD,SAAUzD,EACVuD,SArGF,SAAC3N,EAAG0N,GAE1B9N,EAAMkE,GAAWtC,SAAS+M,GAAatF,MAAMmB,aAAesD,EAC5D7N,EAAS,YAAID,MA+FO,kBAUZ,kBAACqN,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAQ,SAASV,QAAS,GAEtC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG7L,MAAO,CAAEsM,UAAW,YAGtC,kBAACd,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG7L,MAAO,CAAEsM,UAAW,cAK9C,kBAACd,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CAAQpM,QAAS,kBAAMkI,EAAwB,CAAEN,MAAM,KAAUyE,QAAQ,YAAYC,MAAM,UAAUC,WAAS,GAA9G,YC1HLI,MA1Cf,WAEI,IAAMvJ,EAAsBU,mBAAS,MAC/BT,EAAmBS,oBAAS,GAC5BhG,EAAUgG,mBAAS,IASnB8I,EAAM,CACRxJ,sBACAC,mBACAxF,eAXmBiG,mBAAS,MAY5BhG,UACAwF,qBAZyBQ,mBAAS,MAalCP,UAZcO,mBAAS,MAavB+I,QAZY/I,mBAAS,IAarBN,WAZeM,mBAAS,MAaxBmD,uBAZ2BnD,mBAAS,CAAE8D,MAAM,IAa5CK,uBAZ2BnE,mBAAS,CAAE8D,MAAM,KAehD,OACI,yBACIhF,UAAU,MACVhD,MAAO,CAAEkN,mBAAoB,QAC7BC,cAAe,SAAA5O,GAAC,OAAIA,EAAEmG,mBAEtB,kBAAC/G,EAAYyP,SAAb,CAAsBnB,MAAOe,GACzB,kBAACzD,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SChCI8D,QACa,cAA7B5O,OAAO6O,SAASC,UAEiB,UAA7B9O,OAAO6O,SAASC,UAEhB9O,OAAO6O,SAASC,SAASC,MACrB,2DCZZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmIzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAChCA,EAAaC,kB","file":"static/js/main.b2bfbbf7.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const RoomContext = createContext(null) \n","import React, { useContext } from \"react\";\nimport { RoomContext } from './../RoomContext'\n\nexport default function Background({\n    width,\n    height,\n}: {\n    width: number;\n    height: number;\n}) {\n\n    const { __selectedRoom, __rooms } = useContext(RoomContext)\n\n    const [rooms, setRooms] = __rooms\n    const setSelectedRoom = __selectedRoom[1]\n\n    const addRoom = (e: any) => {\n        const id = window.prompt(\"Dénomination de la pièce\");\n\n        if (id === '' || id === null) return\n\n        if (rooms.find((room) => room.id === id)) {\n            alert(`Une pièce nommée ${id} existe déjà. Création annulée !!!`);\n            return;\n        }\n\n        const room = {\n            id: id,\n            x : e.clientX ? e.clientX - 75 : width/2,\n            y : e.clientY ? e.clientY - 75 : height/2,\n            points: [\n                {x : 0, y : 0},\n                {x : 0, y : 200},\n                {x : 200, y : 200},\n                {x : 200, y : 0},\n            ],\n            getPoints() {\n                return this.points.reduce((acc, curr, i) => {\n                    acc[i] = {\n                        x : curr.x,\n                        y : curr.y,\n                        absX : curr.x + this.x,\n                        absY : curr.y + this.y,\n                        offsetX : this.x,\n                        offsetY : this.y,\n                        i,\n                        room : id,\n                        id : `${this.id}.${i}`\n                    }\n                    return acc\n                }, [])\n            },\n            doors : [],\n            outlets : [],\n            switches : []\n        };\n\n        setRooms([...rooms, room]);\n        setSelectedRoom(room.id);\n    }\n\n    const keyHandler = e => {\n        if (e.keyCode === 78) {\n            addRoom(e)\n        }\n    }\n\n    return (\n        <rect\n            style={{'outline':'none'}}\n            tabIndex={-1}\n            id=\"background\"\n            width={width}\n            height={height}\n            fill=\"#38a0f9\"\n            //fill=\"white\"\n            onDoubleClick={addRoom}\n            onClick={() => setSelectedRoom(null)}\n            onKeyDown={keyHandler}\n        />\n    );\n}\n","export function getPolygon(points) {\n    return points.map((point) => [point.x, point.y].join(\" \"));\n}\n\nexport function getPath(points) {\n    return points.reduce((acc, current, i) => {\n        acc[i] = [\n            current];\n        if (i > 0) {\n            acc[i - 1].push(current)\n        }\n        if (i === points.length - 1) acc[i].push(acc[0][0]);\n        return acc;\n    }, []);\n}\n\nexport function getAllPoints(rooms) {\n    let array = rooms.reduce((acc, curr, i) => {\n        const roomPoints = curr.getPoints()\n        acc.push(...roomPoints)\n        return acc\n    }, [])\n    return array\n}\n\nexport const getPointCoords = (clickCoords, pathPoints) => {   // y = m*x + p \n    const [a, b] = pathPoints\n    let [x, y] = clickCoords\n\n    //console.log('x', x)\n    //console.log('y', y)\n\n    const m = (b.y - a.y) / (b.x - a.x)\n    //console.log('m',m)\n    const p = a.y - m*a.x\n\n    if (m === 0) {\n        y = a.y\n    } \n    else if (!isFinite(m)) {\n        x = a.x\n    } else \n        y = m*x + p\n\n    return { x, y }\n\n}\n\nexport function getY(point, pathPoints) {\n\n    const [a,b] = pathPoints\n    // y = m * x + p\n    const dx = b.x - a.x\n    const dy = b.y - a.y\n    const m = dy / dx\n    const p = a.y - m * a.x\n\n    let x\n    let y\n\n    if (m === 0) {\n        x = point.x\n        y = a.y\n    } else if (!isFinite(m)) {\n        x = a.x\n        y = point.y\n    } else {\n        x = point.x\n        y = m * point.x + p\n    }\n    return {x,y}\n}\n\nexport function closestPointToSegment(point, a, b ) {\n    //console.log(point)\n}\n\nexport function project( p, a, b ) {\n    \n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min( 1, Math.max( 0, dot / len ) );\n\n    dot = ( b.x - a.x ) * ( p.y - a.y ) - ( b.y - a.y ) * ( p.x - a.x );\n    \n    return {\n        point: {\n            x: a.x + atob.x * t,\n            y: a.y + atob.y * t\n        },\n        left: dot < 1,\n        dot: dot,\n        t: t\n    };\n}","import React from \"react\";\n\nexport default function Floor({ polygon }) {\n    return <polygon\n        points={polygon}\n        fill=\"#ffffaa\"\n        stroke=\"steelblue\"\n        strokeWidth={8}\n    />;\n}\n///add memo\n","import React, { useContext } from \"react\";\nimport { RoomContext } from './../RoomContext'\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { getAllPoints } from \"../utils\";\n\nfunction Point({ point, visible, }) {\n\n    const { __rooms } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n\n    const roomIndex = rooms.findIndex(room => room.id === point.room)\n\n    if (!visible) {\n        return null;\n    }\n\n    const dragging = (e: any, dnd: DraggableData) => {\n\n        rooms[roomIndex].points[point.i].x = point.x + dnd.deltaX\n        rooms[roomIndex].points[point.i].y = point.y + dnd.deltaY\n\n        setRooms([...rooms])\n    };\n\n    const dragEnd = () => {\n\n        let allPoints = getAllPoints(rooms)\n\n\n        allPoints.forEach(otherPoint => {\n            if (otherPoint.room !== point.room || otherPoint.i !== point.i) {\n                if (Math.abs(point.absX - otherPoint.absX) < 16) {\n                    rooms[roomIndex].points[point.i].x = otherPoint.absX - point.offsetX\n                }\n                if (Math.abs(point.absY - otherPoint.absY) < 16) {\n                    rooms[roomIndex].points[point.i].y = otherPoint.absY - point.offsetY\n                }\n\n            }\n        })\n        setRooms([...rooms])\n    };\n\n    return (\n        <DraggableCore\n            handle=\".corner\"\n            onDrag={dragging}\n            onStop={dragEnd}\n        >\n            <g>\n                <circle\n                    className=\"corner\"\n                    cx={point.x}\n                    cy={point.y}\n                    r={16}\n                    fill={\"white\"}\n                    stroke={\"#38a0f9\"}\n                    strokeWidth={4}\n                />\n                <text\n                    x={point.x}\n                    y={point.y}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"central\"\n                    pointerEvents=\"none\"\n                    fill=\"grey\"\n                >\n                    {point.i}\n                </text>\n            </g>\n        </DraggableCore>\n    );\n}\n\nexport default Point;\n","import React, { useState, useContext } from \"react\";\nimport { line } from \"d3-shape\";\nimport { DraggableCore } from \"react-draggable\";\nimport { RoomContext } from './../RoomContext'\nimport { getAllPoints } from \"../utils\";\n\nexport default function Segment({ pathPoints, visible, }) {\n\n    const { __quickMenuPosition, __quickMenuState, __selectedPathPoints, __rooms, __pointer, __pathNode } = useContext(RoomContext)\n\n    const setQuickMenuPosition = __quickMenuPosition[1]\n    const setQuickMenuState = __quickMenuState[1]\n    const setSelectedPathPoints = __selectedPathPoints[1]\n    const [rooms, setRooms] = __rooms\n    const setPointer = __pointer[1]\n    const setPathNode = __pathNode[1]\n\n    const [isDragging, setIsDragging] = useState(false)\n\n    let [a, b] = pathPoints;\n\n    const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n    let data = [[a.x, a.y], [b.x, b.y]]\n\n    let path = line()\n        .x((d) => d[0])\n        .y((d) => d[1])\n\n    const dragging = (e, dnd) => {\n\n        setIsDragging(true)\n\n        a.x += dnd.deltaX\n        a.y += dnd.deltaY\n\n        b.x += dnd.deltaX\n        b.y += dnd.deltaY\n\n        rooms[roomIndex].points[a.i].x = a.x\n        rooms[roomIndex].points[a.i].y = a.y\n\n        rooms[roomIndex].points[b.i].x = b.x\n        rooms[roomIndex].points[b.i].y = b.y\n\n        setRooms([...rooms])\n    }\n\n    const dragEnd = (e, dnd) => {\n\n        if (!isDragging) {\n            segmentClicked(e)\n            return\n        }\n        setIsDragging(false)\n\n        let allPoints = getAllPoints(rooms)\n\n        pathPoints.forEach(pathPoint => {\n            allPoints.forEach(point => {\n                if (pathPoint.id !== point.id) {\n                    if (Math.abs(pathPoint.absX - point.absX) <= 16) {\n                        rooms[roomIndex].points[pathPoint.i].x = point.absX - pathPoint.offsetX\n                    }\n                    if (Math.abs(pathPoint.absY - point.absY) <= 16) {\n                        rooms[roomIndex].points[pathPoint.i].y = point.absY - pathPoint.offsetY\n                    }\n                }\n            });\n        });\n        setRooms([...rooms])\n    }\n\n    const segmentClicked = e => {\n        e.preventDefault()\n        \n        let coords = { x : null, y : null}\n        \n        if (e.type === 'mouseup') {\n            coords.x = e.clientX\n            coords.y = e.clientY\n            setPointer(coords)\n        } else {\n            console.log(e)\n            console.log(e.originalEvent)\n            coords.x = e.changedTouches[0].clientX\n            coords.y = e.changedTouches[0].clientY\n            setPointer(coords)\n        }\n\n\n        setQuickMenuPosition(coords)\n        setQuickMenuState(prev => !prev)\n        setSelectedPathPoints(pathPoints)\n        setPathNode(e.target)\n    }\n\n    // if (!visible) {\n    //     return null;\n    // }\n\n    return (\n        <DraggableCore\n            handle=\".segment\"\n            //onStart={() => setIsDragging(true)}\n            onDrag={dragging}\n            onStop={dragEnd}\n            cancel=\".doorCenter, .outlet\"\n        >\n            <path\n                style={visible ? { visibility: \"visible\" } : { visibility: 'hidden' }}\n                d={path(data)}\n                id={a.room + '.' + a.i + '.' + b.i}\n                className=\"segment\"\n                strokeWidth={20}\n                stroke=\"#77cfff\"\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                opacity={0.8}\n            //onClick={e => segmentClicked(e)}\n            />\n        </DraggableCore>\n    );\n}\n","import React from \"react\";\n\nfunction Size({pathPoints, visible}) {\n    const [a, b] = pathPoints;\n\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n\n    var c = Math.round(Math.floor(Math.sqrt(dx * dx + dy * dy)/5)*5)\n    //console.log(c)\n\n    if (!visible) {\n        return null;\n    }\n\n    return ( // need to \n        <text style={{pointerEvents:'none', fill:'#404040'}}>\n            <textPath startOffset=\"45%\" xlinkHref={\"#\" + a.room + '.' + a.i + '.' + b.i}>\n                {c}\n            </textPath>\n        </text>\n    );\n}\n\nexport default Size;\n","import React, { useContext } from 'react'\nimport { project } from '../utils'\nimport { RoomContext } from \"../RoomContext\"\nimport { DraggableCore } from \"react-draggable\"\n\nexport default function Door({ door, i }) {\n\n    const { __rooms } = useContext(RoomContext)\n\n    const [rooms, setRooms] = __rooms\n\n    const { pointsIds, doorCenter, doorId } = door\n\n    const room = rooms.find(({ id }) => id === pointsIds.a.split('.')[0])\n\n    const a = room.getPoints().find(({ id }) => id === pointsIds.a)\n    const b = room.getPoints().find(({ id }) => id === pointsIds.b)\n\n    const side1 = { x: doorCenter.x - 50, y: doorCenter.y - 50 }\n    const side2 = { x: doorCenter.x + 50, y: doorCenter.y + 50 }\n\n    //console.log(side1)\n\n    const p1 = project(side1, a, b).point\n    const p2 = project(side2, a, b).point\n\n    const dragging = (e, dnd) => {\n\n        const newDoorCenter = { ...doorCenter }\n        newDoorCenter.x += dnd.deltaX\n        newDoorCenter.y += dnd.deltaY\n\n        const newPoint = project(newDoorCenter, a, b)\n\n        room.doors[i].doorCenter.x = newPoint.point.x\n        room.doors[i].doorCenter.y = newPoint.point.y\n        setRooms([...rooms])\n    }\n\n    return (\n\n        <DraggableCore\n            handle=\".doorCenter\"\n            onDrag={dragging}\n        >\n\n            <line\n                className='doorCenter'\n                id={doorId}\n                x1={p1.x}\n                y1={p1.y}\n                x2={p2.x}\n                y2={p2.y}\n                fill='#ffffaa'\n                stroke=\"#ffffaa\"\n                strokeWidth={8}\n            />\n\n\n        </DraggableCore>\n    )\n}\n","import React, { useContext } from 'react'\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore } from 'react-draggable'\nimport { project } from '../../utils'\n\n\nfunction Outlet({ outlet, i }) {\n\n    const { __rooms, __outletPropertiesMenu } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n    const [outletPropertiesMenu, setOutletPropertiesMenu] = __outletPropertiesMenu\n\n    const { anchorPoint, pointsIds, outletId, props } = outlet\n\n    const { grounding, shutter, type } = props\n\n\n    const room = rooms.find(({ id }) => id === pointsIds.a.split('.')[0])\n\n    const a = room.getPoints().find(({ id }) => id === pointsIds.a)\n    const b = room.getPoints().find(({ id }) => id === pointsIds.b)\n\n    const coords = project(anchorPoint, a, b).point\n\n    var angle = (Math.atan2(b.y - a.y, b.x - a.x) * 180 / Math.PI) - 90;\n\n    const dragging = (e, dnd) => {\n\n        const newAnchorPoint = { ...anchorPoint }\n        newAnchorPoint.x += dnd.deltaX\n        newAnchorPoint.y += dnd.deltaY\n\n        const newPoint = project(newAnchorPoint, a, b)\n\n        room.outlets[i].anchorPoint.x = newPoint.point.x\n        room.outlets[i].anchorPoint.y = newPoint.point.y\n        setRooms([...rooms])\n    }\n\n\n    return (\n        <DraggableCore\n            handle=\".outlet\"\n            onDrag={dragging}\n        >\n            <g\n                className='outlet'\n                style={{ pointerEvents: 'all' }}\n                onClick={() => {\n                    setOutletPropertiesMenu(prev => { return { ...prev, open: true, outlet: outlet } })\n                }\n                }\n\n            >\n\n\n                <g\n                    id=\"1\"\n                    transform={`translate(${coords.x} ${coords.y}) scale(1.75) rotate(${angle})`}\n                >\n                    <text\n                        transform={'translate(10 5.5) rotate(90)'}\n                        fontSize={'50%'}\n                    >\n                        {type === 1 ? null : type}\n                    </text>\n                    <g id=\"2\"\n                        transform={`translate(2 2)`}\n\n                    >\n                        <path // ground\n                            d=\"M3.54 11.58 L3.54 0.24\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={grounding === true ? 'visible' : 'hidden'}\n                        />\n\n                        <path // protect left\n                            d=\"M8.27 1.2 L8.27 0.25\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={shutter === true ? 'visible' : 'hidden'}\n\n\n                        />\n                        <path // protect right\n                            d=\"M8.27 11.6 L8.27 10.65\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={shutter === true ? 'visible' : 'hidden'}\n\n\n                        />\n                        <path //arc\n                            d=\"M8.27 10.65 A4.72441 4.72441 0 0 1 3.55 5.93 A4.72441 4.72441 0 0 1 8.27 1.2\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n\n                        />\n                        <path //foot\n                            d=\"M3.54 5.92 L-0 5.92\"\n                            id='coucou'\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        />\n                    </g>\n                </g>\n\n            </g>\n        </DraggableCore>\n    )\n}\n\nexport default Outlet\n","import React, { useContext } from 'react'\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore } from 'react-draggable'\nimport { project } from '../../utils'\n\n\nfunction Switch({ __switch, i }) {\n\n    const { __rooms, __switchPropertiesMenu } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n    const [switchPropertiesMenu, setSwitchPropertiesMenu] = __switchPropertiesMenu\n\n    const { anchorPoint, pointsIds, switchId, props } = __switch\n\n    const { way, pole, dimmer, illuminated, type } = props\n\n\n    const room = rooms.find(({ id }) => id === pointsIds.a.split('.')[0])\n\n    const a = room.getPoints().find(({ id }) => id === pointsIds.a)\n    const b = room.getPoints().find(({ id }) => id === pointsIds.b)\n\n    const coords = project(anchorPoint, a, b).point\n\n    var angle = (Math.atan2(b.y - a.y, b.x - a.x) * 180 / Math.PI) - 90;\n\n    const dragging = (e, dnd) => {\n\n        const newAnchorPoint = { ...anchorPoint }\n        newAnchorPoint.x += dnd.deltaX\n        newAnchorPoint.y += dnd.deltaY\n\n        const newPoint = project(newAnchorPoint, a, b)\n\n        room.switches[i].anchorPoint.x = newPoint.point.x\n        room.switches[i].anchorPoint.y = newPoint.point.y\n        setRooms([...rooms])\n    }\n\n\n    return (\n        <DraggableCore\n            handle=\".switch\"\n            onDrag={dragging}\n        >\n            <g\n                className='switch'\n                style={{ pointerEvents: 'all' }}\n                onClick={() => {\n                    setSwitchPropertiesMenu(prev => { return { ...prev, open: true, __switch: __switch } })\n                }\n                }\n            >\n                <g id=\"1\"\n                    transform={`translate(${coords.x} ${coords.y}) scale(1.75) rotate(${angle})`}\n                >\n                    <g id=\"2\">\n                        {/* <title>Double pole change over switch</title> */}\n                        <path\n                            d=\"M8.55 10.53 A2.83465 2.83465 0 1 1 2.88 10.53 A2.83465 2.83465 0 1 1 8.55 10.53 Z\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        // visibility={'hidden'}\n\n                        />\n                        <path // double pole\n                            d=\"M8.68 2.39 L10.65 3.11\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={ pole === 2 && type === 'switch' ? 'visible' : 'hidden'}\n\n\n                        />\n                        <path // main switch \n                            d=\"M6.69 7.87 L9.46 0.24 L11.44 0.96\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={ type === 'push' ? 'hidden' : 'visible'}\n                        />\n                        <path // double pole ????\n                            d=\"M8.55 10.53 A2.83465 2.83465 0 1 1 2.88 10.53 A2.83465 2.83465 0 1 1 8.55 10.53\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={ pole === 2 && type === 'switch' ? 'hidden' : 'hidden'}\n\n                        />\n                        <path // double pole\n                            d=\"M2.76 18.68 L0.78 17.96\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={ pole === 2 && type === 'switch' ? 'visible' : 'hidden'}\n\n                        />\n                        <path // second throw\n                            d=\"M4.75 13.2 L1.97 20.83 L0 20.11\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={ way === 2 && type === 'switch' ? 'visible' : 'hidden'}\n\n                        />\n                    </g>\n                </g>\n            </g>\n\n\n\n        </DraggableCore>\n    )\n}\n\nexport default Switch\n","import React, { useContext } from \"react\";\nimport { RoomContext } from './../RoomContext'\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { getPath, getPolygon, getAllPoints } from \"./../utils\";\nimport Floor from \"./Floor\";\nimport Point from \"./Point\";\nimport Segment from \"./Segment\";\nimport Size from \"./Size\";\nimport Door from './Door'\nimport Outlet from './ELECTRICAL/Outlet'\nimport Switch from './ELECTRICAL/Switch'\n\nfunction Room({\n    isSelected,\n    room,\n    i\n}) {\n\n    const { __rooms, __selectedRoom } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n    const setSelectedRoom = __selectedRoom[1]\n\n    //console.log(room.outlets)\n\n    const deleteRoom = (e: any) => {\n        if (isSelected) {\n            if (e.keyCode === 8) {\n                setRooms((rooms: any) => rooms.filter((el: any) => el.id !== room.id));\n            }\n        }\n    };\n\n    const dragging = (e: any, dnd: DraggableData) => {\n        e.preventDefault()\n\n        const newRooms = [...rooms]\n        newRooms[i].x += dnd.deltaX\n        newRooms[i].y += dnd.deltaY\n\n        setRooms(newRooms)\n    };\n\n    const dragEnded = () => {\n\n        const allPoints = getAllPoints(rooms)\n\n        room.getPoints().forEach(point => {\n            allPoints.forEach(otherPoint => {\n\n                let dx = Math.abs(point.absX - otherPoint.absX)\n                let dy = Math.abs(point.absY - otherPoint.absY)\n\n                if (point.room !== otherPoint.room) {\n                    if (dx <= 16) {\n                        rooms[i].points[point.i].x = otherPoint.absX - point.offsetX\n                    }\n                    if (dy <= 16) {\n                        rooms[i].points[point.i].y = otherPoint.absY - point.offsetY\n                    }\n                }\n            })\n        })\n        setRooms([...rooms])\n    }\n\n    return (\n        <DraggableCore\n            handle=\".room\"\n            cancel=\".corner, .segment, .doorCenter, .outlet, .switch\"\n            disabled={!isSelected}\n            onStop={dragEnded}\n            onDrag={dragging}\n        >\n            <g\n                className={\"room\"}\n                id={room.id}\n                transform={`translate(${room.x} ${room.y})`}\n                onClick={() => {\n                    setSelectedRoom(room.id);\n                }}\n                onKeyDown={deleteRoom}\n                tabIndex={-1}\n                style={{ outline: 0 }}\n            >\n                <Floor\n                    polygon={getPolygon(room.getPoints())}\n                />\n\n                {\n                    getPath(room.getPoints()).map((pathPoints, index) => (\n                        <Segment\n                            key={index}\n                            pathPoints={pathPoints}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n\n                {\n                    room.getPoints().map((point, index) => (\n                        <Point\n                            key={index}\n                            point={point}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n                {\n                    getPath(room.getPoints()).map((pathPoints, index) => (\n                        <Size\n                            key={index}\n                            pathPoints={pathPoints}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n                {\n                    room.doors.map((door, i) => (\n                        <Door\n                            key={i}\n                            door={door}\n                            i={i}\n                        />\n                    ))\n                }\n                {\n                    room.outlets.map((outlet, i) => (\n                        <Outlet\n                            key={i}\n                            outlet={outlet}\n                            i={i}\n                        />\n                    ))\n                }\n                {\n                    room.switches.map((__switch, i) => (\n                        <Switch\n                            key={i}\n                            __switch={__switch}\n                            i={i}\n                        />\n                    ))\n                }\n            </g>\n        </DraggableCore>\n    );\n}\n\nexport default Room;\n\n","import React, { useContext } from \"react\";\nimport Background from \"./Background\";\nimport Room from \"./Room\";\nimport { RoomContext } from \"../RoomContext\";\n\nexport default function Plan() {\n\n    const { __rooms, __selectedRoom } = useContext(RoomContext)\n\n    const [rooms] = __rooms;\n    const [selectedRoom] = __selectedRoom;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    return (\n        <svg\n            id='plan'\n            width={width}\n            height={height}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n\n            <Background\n                width={width}\n                height={height}\n            />\n\n            {\n                rooms\n                    .sort((a, b) => {\n                        const c = (a.id === selectedRoom)\n                        const d = (b.id === selectedRoom)\n                        return (c === d) ? 0 : c ? 1 : - 1\n                    })\n                    .map((room, i) => {\n                        return (\n                            <Room\n                                key={room.id}\n                                isSelected={selectedRoom === room.id ? true : false}\n                                room={room}\n                                i={i}\n                            />\n                        );\n                    })\n            }\n\n            {\n                rooms.reduce((acc, curr, i) => {\n                    acc.push(...curr.doors)\n                    return acc\n                },[]).map((door,i) => {\n                    const room = rooms.find(({id}) => id === door.doorId.split('.')[0])\n                    console.log('#' + door.doorId)\n\n                   // if (selectedRoom !== room.id) {\n                        return (\n                            <use\n                            key={i}\n                            xlinkHref={'#' + door.doorId}\n                            transform={`translate(${room.x} ${room.y})`}\n                        /> \n                        )\n                    //} else return\n                })\n            }\n\n\n\n\n\n        </svg>\n    );\n}\n","import React, { useContext } from 'react'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport { getPointCoords, getAllPoints } from './../../utils'\nimport { RoomContext } from './../../RoomContext'\n\nconst QuickMenu = () => {\n\n    const {\n        __quickMenuPosition,\n        __quickMenuState,\n        __selectedPathPoints,\n        __rooms,\n        __pointer,\n        __outletPropertiesMenu,\n        __switchPropertiesMenu\n    } = useContext(RoomContext)\n\n    const [quickMenuPosition, setQuickMenuPosition] = __quickMenuPosition\n    const [quickMenuState, setQuickMenuState] = __quickMenuState\n    const [selectedPathPoints] = __selectedPathPoints\n    const [rooms, setRooms] = __rooms\n    const [pointer] = __pointer\n    const [outletPropertiesMenu, setOutletPropertiesMenu] = __outletPropertiesMenu\n    const [switchPropertiesMenu, setSwitchPropertiesMenu] = __switchPropertiesMenu\n\n    const handleClose = () => {\n        setQuickMenuState(false)\n        setQuickMenuPosition(null)\n    }\n\n    const addCorner = e => {\n        e.persist()\n\n        const [a] = selectedPathPoints\n        const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n        const x = pointer.x - rooms[roomIndex].x\n        const y = pointer.y - rooms[roomIndex].y\n\n        const newPoint = getPointCoords([x, y], selectedPathPoints)\n\n        getAllPoints(rooms).forEach(point => {\n            //console.log(newPoint)\n            if (Math.abs(point.absX - (newPoint.x + rooms[roomIndex].x)) < 16) {\n                newPoint.x = point.absX - rooms[roomIndex].x\n            }\n            if (Math.abs(point.absY - (newPoint.y + rooms[roomIndex].y)) < 16) {\n                newPoint.y = point.absY - rooms[roomIndex].y\n            }\n        })\n\n        const point1 = { ...newPoint }\n        const point2 = { ...newPoint }\n\n        rooms[roomIndex].points.splice(a.i + 1, 0, point1, point2)\n        setRooms([...rooms])\n\n        handleClose()\n    }\n\n    const addDoor = () => {\n\n        const [a, b] = selectedPathPoints\n\n        const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n        const x = pointer.x - rooms[roomIndex].x\n        const y = pointer.y - rooms[roomIndex].y\n\n        const doorCenter = getPointCoords([x, y], selectedPathPoints)\n        const doorId = rooms[roomIndex].id + '.door.' + rooms[roomIndex].doors.length\n\n\n        const pointsIds = { a: a.id, b: b.id }\n\n        const door = { pointsIds, doorCenter, doorId }\n\n        rooms[roomIndex].doors.push(door)\n\n        setRooms([...rooms])\n\n        handleClose()\n\n    }\n\n    const addOutlet = e => {\n        const [a, b] = selectedPathPoints\n\n        const room = rooms.find(({ id }) => id === a.room)\n\n        const x = pointer.x - room.x\n        const y = pointer.y - room.y\n\n        const pointsIds = { a: a.id, b: b.id }\n        const anchorPoint = getPointCoords([x, y], selectedPathPoints)\n        const id = room.id + '.outlet.' + room.outlets.length\n\n        const props = {\n            type: 1,\n            grounding: true,\n            shutter: true\n        }\n\n        const outlet = { anchorPoint, pointsIds, id, props }\n        console.log(props)\n\n        room.outlets.push(outlet)\n        setOutletPropertiesMenu(prev => { return { ...prev, open: true, outlet: outlet } })\n        setRooms([...rooms])\n        handleClose()\n\n\n    }\n\n    const addSwitch = e => {\n        const [a, b] = selectedPathPoints\n\n        const room = rooms.find(({ id }) => id === a.room)\n\n        const x = pointer.x - room.x\n        const y = pointer.y - room.y\n\n        const pointsIds = { a: a.id, b: b.id }\n        const anchorPoint = getPointCoords([x, y], selectedPathPoints)\n        const id = room.id + '.switch.' + room.switches.length\n\n        const props = {\n            way : 1,\n            pole : 1,\n            dimmer : false,\n            illuminated : false,\n            type : 'switch'\n        }\n\n        const __switch = { anchorPoint, pointsIds, id, props }\n\n        room.switches.push(__switch)\n        setSwitchPropertiesMenu(prev => { return { ...prev, open: true, __switch: __switch } })\n        setRooms([...rooms])\n        handleClose()\n    }\n\n    return (\n        <Menu\n            id=\"quickMenu\"\n            transitionDuration={{ enter: 0, exit: 0 }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n                quickMenuPosition !== null\n                    ? { top: quickMenuPosition.y, left: quickMenuPosition.x }\n                    : undefined\n            }\n            open={quickMenuState}\n            onClose={handleClose}\n        >\n            <MenuItem onClick={addCorner}>new corner</MenuItem>\n            <MenuItem onClick={addDoor}>new door</MenuItem>\n            <MenuItem onClick={addOutlet}>new outlet</MenuItem>\n            <MenuItem onClick={addSwitch}>new switch</MenuItem>\n        </Menu>\n    )\n}\n\nexport default QuickMenu\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Dialog, DialogTitle, Grid, Divider, Button } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport { RoomContext } from '../../RoomContext'\n\nfunction OutletPropertiesMenu() {\n\n    const { __outletPropertiesMenu, __rooms } = useContext(RoomContext)\n\n    const [outletPropertiesMenu, setOutletPropertiesMenu] = __outletPropertiesMenu\n    const [rooms, setRooms] = __rooms\n\n    const { open, outlet } = outletPropertiesMenu\n\n    if (!outlet) {\n        return null\n    }\n\n    const roomIndex = rooms.findIndex(room => room.id === outlet.id.split('.')[0])\n    const room = rooms.find(({ id }) => id === outlet.id.split('.')[0])\n    const outletIndex = room.outlets.findIndex( el => el.id === outlet.id )\n    const thisOutlet = room.outlets.find(({ id }) => id === outlet.id)\n\n    const { grounding, shutter, type } = thisOutlet.props\n\n    const handleClose = () => {\n        setOutletPropertiesMenu(prev => { return { ...prev, open: false } })\n    }\n\n    const handleGrounding = (e, value) => {\n        console.log(e)\n\n        rooms[roomIndex].outlets[outletIndex].props.grounding = !value\n\n        setRooms([...rooms])\n        console.log(rooms)\n    }\n\n    const handleShutter = (e, value) => {\n        console.log(e)\n\n        rooms[roomIndex].outlets[outletIndex].props.shutter = !value\n\n        setRooms([...rooms])\n    }\n\n    const handleType = (e, value) => {\n        rooms[roomIndex].outlets[outletIndex].props.type = value\n        setRooms([...rooms])\n    }\n\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open} onClose={handleClose}>\n            <DialogTitle id=\"simple-dialog-title\">Set outlet properties</DialogTitle>\n\n            <Grid container direction='column' spacing={1}>\n                <Grid item>\n                    <Grid\n                        container\n                        direction='column'\n                    >\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={type}\n                            onChange={handleType}\n\n                            >\n                                <ToggleButton value={1} selected={type === 1}>ONE</ToggleButton>\n                                <ToggleButton value={2} selected={type === 2}>TWO</ToggleButton>\n                                <ToggleButton value={3} selected={type === 3}>THREE</ToggleButton>\n                                <ToggleButton value={4} selected={type === 4}>FOOR</ToggleButton>\n                                <ToggleButton value={5} selected={type === 5}>FIVE</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid container justify=\"center\" spacing={0}>\n\n                        <Grid item xs={6} style={{ textAlign: \"center\" }} >\n                            <ToggleButton\n                                value={grounding}\n                                selected={grounding}\n                                onChange={(e, value) => handleGrounding(e, value)}\n                            >\n                                Grounding\n                            </ToggleButton>\n                        </Grid>\n                        <Grid item xs={6} style={{ textAlign: \"center\" }} >\n                            <ToggleButton\n                                value={shutter}\n                                selected={shutter}\n                            onChange={handleShutter}\n                            >\n                                Shutter</ToggleButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button onClick={() => setOutletPropertiesMenu({ open: false })} variant=\"contained\" color=\"primary\" fullWidth>\n                        Save\n                    </Button>\n                </Grid>\n            </Grid>\n\n        </Dialog>\n    )\n}\n\nexport default OutletPropertiesMenu\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Dialog, DialogTitle, Grid, Divider, Button } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport { RoomContext } from '../../RoomContext'\n\nfunction SwitchPropertiesMenu() {\n\n    const { __switchPropertiesMenu, __rooms } = useContext(RoomContext)\n\n    const [switchPropertiesMenu, setSwitchPropertiesMenu] = __switchPropertiesMenu\n    const [rooms, setRooms] = __rooms\n\n    const { open, __switch } = switchPropertiesMenu\n\n    if (!__switch) {\n        return null\n    }\n\n    const { way, pole, dimmer, illuminated, type } = __switch.props\n    console.log(__switch.props)\n\n    const roomIndex = rooms.findIndex(room => room.id === __switch.id.split('.')[0])\n    const room = rooms.find(({ id }) => id === __switch.id.split('.')[0])\n    const switchIndex = room.switches.findIndex(el => el.id === __switch.id)\n    const this__switch = room.switches.find(({ id }) => id === __switch.id)\n\n    const handleClose = () => {\n        setSwitchPropertiesMenu(prev => { return { ...prev, open: false } })\n    }\n\n    const handleType = (e, value) => {\n        rooms[roomIndex].switches[switchIndex].props.type = value\n        setRooms([...rooms])\n    }\n\n    const handleWay = (e, value) => {\n\n        rooms[roomIndex].switches[switchIndex].props.way = value\n        setRooms([...rooms])\n    }\n\n    const handlePole = (e, value) => {\n\n        rooms[roomIndex].switches[switchIndex].props.pole = value\n        setRooms([...rooms])\n    }\n\n    const handleDimmer = (e, value) => {\n\n        rooms[roomIndex].switches[switchIndex].props.dimmer = !value\n        setRooms([...rooms])\n    }\n    const handleIlluminated = (e, value) => {\n\n        rooms[roomIndex].switches[switchIndex].props.illuminated = !value\n        setRooms([...rooms])\n    }\n\n    // const handleType = (e, value) => {\n    //     rooms[roomIndex].switchs[switchIndex].props.type = value\n    //     setRooms([...rooms])\n    // }\n\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open} onClose={handleClose}>\n            <DialogTitle id=\"simple-dialog-title\">Set switch properties</DialogTitle>\n\n            <Grid container direction='column' spacing={1}>\n                <Grid item>\n                    <Grid\n                        container\n                        direction='column'\n                    >\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={type}\n                                onChange={handleType}\n\n                            >\n                                <ToggleButton value={'switch'} selected={type === 'switch'}>Switch</ToggleButton>\n                                <ToggleButton value={'push'} selected={type === 'push'}>Push</ToggleButton>\n                                <ToggleButton value={'inverter'} selected={type === 'inverter'}>Inverter</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={way}\n                                onChange={handleWay}\n\n                            >\n                                <ToggleButton\n                                    value={1}\n                                    selected={way === 1 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Single throw\n                                </ToggleButton>\n\n                                <ToggleButton\n                                    value={2}\n                                    selected={way === 2 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n                                >\n                                    Double throw\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={pole}\n                                onChange={handlePole}\n                            >\n                                <ToggleButton\n                                    value={1}\n                                    selected={pole === 1 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Single Pole\n                                </ToggleButton>\n\n                                <ToggleButton\n                                    value={2}\n                                    selected={pole === 2 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Double Pole\n                                </ToggleButton>\n\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item>\n                            <ToggleButton\n                                value={dimmer}\n                                selected={dimmer}\n                                onChange={handleDimmer}\n                            >\n                                Dimmer\n                            </ToggleButton>\n                        </Grid>\n                        <Grid item>\n                            <ToggleButton\n                                value={illuminated}\n                                selected={illuminated}\n                                onChange={handleIlluminated}\n                            >\n                                Illuminated\n                            </ToggleButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Grid container justify=\"center\" spacing={0}>\n\n                        <Grid item xs={6} style={{ textAlign: \"center\" }} >\n\n                        </Grid>\n                        <Grid item xs={6} style={{ textAlign: \"center\" }} >\n\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button onClick={() => setSwitchPropertiesMenu({ open: false })} variant=\"contained\" color=\"primary\" fullWidth>\n                        Save\n                    </Button>\n                </Grid>\n            </Grid>\n\n        </Dialog>\n    )\n}\n\nexport default SwitchPropertiesMenu\n","import React, { useState } from \"react\";\nimport Plan from \"./components/Plan\";\nimport \"./App.css\";\nimport QuickMenu from './components/UI/QuickMenu'\nimport OutletPropertiesMenu from './components/UI/OutletPropertiesMenu'\nimport SwitchPropertiesMenu from './components/UI/SwitchPropertiesMenu'\nimport { RoomContext } from './RoomContext'\n\nfunction App() {\n\n    const __quickMenuPosition = useState(null)\n    const __quickMenuState = useState(false)\n    const __rooms = useState([])\n    const __selectedRoom = useState(null)\n    const __selectedPathPoints = useState(null)\n    const __pointer = useState(null)\n    const __doors = useState([])\n    const __pathNode = useState(null)\n    const __outletPropertiesMenu = useState({ open: false })\n    const __switchPropertiesMenu = useState({ open: false })\n\n    const CTX = {\n        __quickMenuPosition,\n        __quickMenuState,\n        __selectedRoom,\n        __rooms,\n        __selectedPathPoints,\n        __pointer,\n        __doors,\n        __pathNode,\n        __outletPropertiesMenu,\n        __switchPropertiesMenu\n    }\n\n    return (\n        <div\n            className=\"App\"\n            style={{ overscrollBehavior: \"none\" }}\n            onContextMenu={e => e.preventDefault()}\n        >\n            <RoomContext.Provider value={CTX}>\n                <Plan />\n                <QuickMenu />\n                <OutletPropertiesMenu />\n                <SwitchPropertiesMenu />\n            </RoomContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n            window.location.href,\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}