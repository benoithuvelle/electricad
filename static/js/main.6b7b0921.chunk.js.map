{"version":3,"sources":["RoomContext.tsx","components/BUILDING/Background.tsx","utils.ts","components/BUILDING/Floor.tsx","components/BUILDING/Point.tsx","components/BUILDING/Segment.tsx","components/BUILDING/Size.tsx","components/BUILDING/Door.tsx","components/ELECTRICAL/Lamp.js","components/ELECTRICAL/Outlet.tsx","components/ELECTRICAL/Switch.js","components/ELECTRICAL/Circuit.jsx","components/ELECTRICAL/Component.jsx","components/BUILDING/Room.tsx","components/BUILDING/Plan.tsx","components/UI/QuickMenu.tsx","components/UI/SwitchProperties.jsx","components/UI/OutletProperties.jsx","components/UI/LampProperties.jsx","components/UI/CircuitChooser.jsx","components/UI/ComponentPropertiesMenu.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RoomContext","createContext","Background","width","height","useContext","__selectedRoom","__rooms","rooms","setRooms","setSelectedRoom","addRoom","e","id","window","prompt","find","room","alert","x","clientX","y","clientY","points","getPoints","this","reduce","acc","curr","i","absX","absY","offsetX","offsetY","doors","outlets","switches","lamps","components","style","tabIndex","fill","onDoubleClick","onClick","onKeyDown","keyCode","getPath","current","push","length","getAllPoints","roomPoints","getPointCoords","clickCoords","pathPoints","a","b","m","p","isFinite","project","atob","len","dot","t","Math","min","max","point","left","Floor","polygon","roomId","isSelected","setPointer","setQuickMenuPosition","setQuickMenuState","stroke","strokeWidth","Point","visible","roomIndex","findIndex","handle","onDrag","dnd","deltaX","deltaY","onStop","forEach","otherPoint","abs","className","cx","cy","r","textAnchor","alignmentBaseline","pointerEvents","Segment","__quickMenuPosition","__quickMenuState","__selectedPathPoints","__pointer","__node","setSelectedPathPoints","setNode","useState","isDragging","setIsDragging","data","path","line","d","segmentClicked","preventDefault","coords","type","console","log","originalEvent","changedTouches","prev","target","allPoints","pathPoint","cancel","visibility","strokeLinecap","strokeLinejoin","opacity","Size","dx","dy","c","round","floor","sqrt","startOffset","xlinkHref","Door","door","pointsIds","doorCenter","doorId","split","side1","side2","p1","p2","newDoorCenter","newPoint","x1","y1","x2","y2","Lamp","props","transform","Outlet","grounding","shutter","angle","fontSize","Switch","pole","way","dimmer","vectorEffect","Circuit","circuit","name","number","toUpperCase","Component","component","__componentPropertiesMenu","setComponentPropertiesMenu","anchorPoint","category","node","box","setBox","refSVG","useRef","useEffect","getBBox","nodeName","aId","bId","atan2","PI","newAnchorPoint","open","ref","switchRender","Room","disabled","roomClicked","newRooms","filter","el","outline","map","join","index","key","Plan","__components","selectedRoom","innerWidth","innerHeight","xmlns","xmlnsXlink","sort","QuickMenu","quickMenuPosition","quickMenuState","selectedPathPoints","pointer","handleClose","addComponent","illuminated","Menu","transitionDuration","enter","exit","anchorReference","anchorPosition","top","undefined","onClose","MenuItem","point1","point2","splice","SwitchProperties","handleChange","Grid","container","direction","spacing","item","xs","ToggleButtonGroup","exclusive","aria-label","value","onChange","ToggleButton","selected","OutletProperties","justify","textAlign","LampProperties","CircuitChooser","setName","TextField","label","margin","variant","ComponentPropertiesMenu","componentPropertiesMenu","componentIndex","newValue","currentTarget","isNaN","parseInt","property","circuitName","all","toLowerCase","getAllElementsOnCircuit","Dialog","DialogTitle","Typography","renderSwitch","Button","color","fullWidth","App","CTX","__doors","__outletPropertiesMenu","__switchPropertiesMenu","overscrollBehavior","onContextMenu","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b7b0921.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const RoomContext = createContext(null) \n","import React, { useContext } from \"react\";\nimport { RoomContext } from '../../RoomContext'\n\nexport default function Background({\n    width,\n    height,\n}: {\n    width: number;\n    height: number;\n}) {\n\n    const { __selectedRoom, __rooms } = useContext(RoomContext)\n\n    const [rooms, setRooms] = __rooms\n    const setSelectedRoom = __selectedRoom[1]\n\n    const addRoom = (e: any) => {\n        const id = window.prompt(\"Dénomination de la pièce\");\n\n        if (id === '' || id === null) return\n\n        if (rooms.find((room) => room.id === id)) {\n            alert(`Une pièce nommée ${id} existe déjà. Création annulée !!!`);\n            return;\n        }\n\n        const room = {\n            id: id,\n            x : e.clientX ? e.clientX - 75 : width/2,\n            y : e.clientY ? e.clientY - 75 : height/2,\n            points: [\n                {x : 0, y : 0},\n                {x : 0, y : 200},\n                {x : 200, y : 200},\n                {x : 200, y : 0},\n            ],\n            getPoints() {\n                return this.points.reduce((acc, curr, i) => {\n                    acc[i] = {\n                        x : curr.x,\n                        y : curr.y,\n                        absX : curr.x + this.x,\n                        absY : curr.y + this.y,\n                        offsetX : this.x,\n                        offsetY : this.y,\n                        i,\n                        room : id,\n                        id : `${this.id}.${i}`\n                    }\n                    return acc\n                }, [])\n            },\n            doors : [],\n            outlets : [],\n            switches : [],\n            lamps : [],\n            components : []\n        };\n\n        setRooms([...rooms, room]);\n        setSelectedRoom(room.id);\n    }\n\n    const keyHandler = e => {\n        if (e.keyCode === 78) {\n            addRoom(e)\n        }\n    }\n\n    return (\n        <rect\n            style={{'outline':'none'}}\n            tabIndex={-1}\n            id=\"background\"\n            width={width}\n            height={height}\n            fill=\"#38a0f9\"\n            //fill=\"white\"\n            onDoubleClick={addRoom}\n            onClick={() => setSelectedRoom(null)}\n            onKeyDown={keyHandler}\n        />\n    );\n}\n","export function getPolygon(points) {\n    return points.map((point) => [point.x, point.y].join(\" \"));\n}\n\nexport function getPath(points) {\n    return points.reduce((acc, current, i) => {\n        acc[i] = [\n            current];\n        if (i > 0) {\n            acc[i - 1].push(current)\n        }\n        if (i === points.length - 1) acc[i].push(acc[0][0]);\n        return acc;\n    }, []);\n}\n\nexport function getAllPoints(rooms) {\n    let array = rooms.reduce((acc, curr, i) => {\n        const roomPoints = curr.getPoints()\n        acc.push(...roomPoints)\n        return acc\n    }, [])\n    return array\n}\n\nexport const getPointCoords = (clickCoords, pathPoints) => {   // y = m*x + p \n    const [a, b] = pathPoints\n    let [x, y] = clickCoords\n\n    //console.log('x', x)\n    //console.log('y', y)\n\n    const m = (b.y - a.y) / (b.x - a.x)\n    //console.log('m',m)\n    const p = a.y - m * a.x\n\n    if (m === 0) {\n        y = a.y\n    }\n    else if (!isFinite(m)) {\n        x = a.x\n    } else\n        y = m * x + p\n\n    return { x, y }\n\n}\n\nexport function getY(point, pathPoints) {\n\n    const [a, b] = pathPoints\n    // y = m * x + p\n    const dx = b.x - a.x\n    const dy = b.y - a.y\n    const m = dy / dx\n    const p = a.y - m * a.x\n\n    let x\n    let y\n\n    if (m === 0) {\n        x = point.x\n        y = a.y\n    } else if (!isFinite(m)) {\n        x = a.x\n        y = point.y\n    } else {\n        x = point.x\n        y = m * point.x + p\n    }\n    return { x, y }\n}\n\nexport function closestPointToSegment(point, a, b) {\n    //console.log(point)\n}\n\nexport function project(p, a, b) {\n\n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min(1, Math.max(0, dot / len));\n\n    dot = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x);\n\n    return {\n        point: {\n            x: a.x + atob.x * t,\n            y: a.y + atob.y * t\n        },\n        left: dot < 1,\n        dot: dot,\n        t: t\n    };\n}\n\nexport function getAllElementsOnCircuit(rooms, circuitName) {\n\n    const all = rooms.reduce((acc, curr, i) => {\n        acc.push(...curr.components)\n        return acc\n    }, [])\n        .filter(el => {\n            return el.props.circuit.name.toLowerCase() === circuitName.toLowerCase()\n         })\n    console.log(all.length)\n    return all.length\n}","import React, { useContext } from \"react\";\nimport { RoomContext } from '../../RoomContext'\n\n\nexport default function Floor({ polygon, isSelected, roomId }) {\n\n    const { setPointer, setQuickMenuPosition, setQuickMenuState } = useContext(RoomContext)\n\n    return <polygon\n        id={`${roomId + '.floor'}`}\n        points={polygon}\n        fill=\"#ffffaa\"\n        stroke=\"steelblue\"\n        strokeWidth={8}\n    />;\n}\n","import React, { useContext } from \"react\";\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { getAllPoints } from \"../../utils\";\n\nfunction Point({ point, visible, }) {\n\n    const { __rooms } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n\n    const roomIndex = rooms.findIndex(room => room.id === point.room)\n\n    if (!visible) {\n        return null;\n    }\n\n    const dragging = (e: any, dnd: DraggableData) => {\n\n        rooms[roomIndex].points[point.i].x = point.x + dnd.deltaX\n        rooms[roomIndex].points[point.i].y = point.y + dnd.deltaY\n\n        setRooms([...rooms])\n    };\n\n    const dragEnd = () => {\n\n        let allPoints = getAllPoints(rooms)\n\n\n        allPoints.forEach(otherPoint => {\n            if (otherPoint.room !== point.room || otherPoint.i !== point.i) {\n                if (Math.abs(point.absX - otherPoint.absX) < 16) {\n                    rooms[roomIndex].points[point.i].x = otherPoint.absX - point.offsetX\n                }\n                if (Math.abs(point.absY - otherPoint.absY) < 16) {\n                    rooms[roomIndex].points[point.i].y = otherPoint.absY - point.offsetY\n                }\n\n            }\n        })\n        setRooms([...rooms])\n    };\n\n    return (\n        <DraggableCore\n            handle=\".corner\"\n            onDrag={dragging}\n            onStop={dragEnd}\n        >\n            <g>\n                <circle\n                    className=\"corner\"\n                    cx={point.x}\n                    cy={point.y}\n                    r={16}\n                    fill={\"white\"}\n                    stroke={\"#38a0f9\"}\n                    strokeWidth={4}\n                />\n                <text\n                    x={point.x}\n                    y={point.y}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"central\"\n                    pointerEvents=\"none\"\n                    fill=\"grey\"\n                >\n                    {point.i}\n                </text>\n            </g>\n        </DraggableCore>\n    );\n}\n\nexport default Point;\n","import React, { useState, useContext } from \"react\";\nimport { line } from \"d3-shape\";\nimport { DraggableCore } from \"react-draggable\";\nimport { RoomContext } from '../../RoomContext'\nimport { getAllPoints } from \"../../utils\";\n\nexport default function Segment({ pathPoints, visible, }) {\n\n    const { __quickMenuPosition, __quickMenuState, __selectedPathPoints, __rooms, __pointer, __node } = useContext(RoomContext)\n\n    const setQuickMenuPosition = __quickMenuPosition[1]\n    const setQuickMenuState = __quickMenuState[1]\n    const setSelectedPathPoints = __selectedPathPoints[1]\n    const [rooms, setRooms] = __rooms\n    const setPointer = __pointer[1]\n    const setNode = __node[1]\n\n    const [isDragging, setIsDragging] = useState(false)\n\n    let [a, b] = pathPoints;\n\n    const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n    let data = [[a.x, a.y], [b.x, b.y]]\n\n    let path = line()\n        .x((d) => d[0])\n        .y((d) => d[1])\n\n    const dragging = (e, dnd) => {\n\n        setIsDragging(true)\n\n        a.x += dnd.deltaX\n        a.y += dnd.deltaY\n\n        b.x += dnd.deltaX\n        b.y += dnd.deltaY\n\n        rooms[roomIndex].points[a.i].x = a.x\n        rooms[roomIndex].points[a.i].y = a.y\n\n        rooms[roomIndex].points[b.i].x = b.x\n        rooms[roomIndex].points[b.i].y = b.y\n\n        setRooms([...rooms])\n    }\n\n    const dragEnd = (e, dnd) => {\n\n        if (!isDragging) {\n            segmentClicked(e)\n            return\n        }\n        setIsDragging(false)\n\n        let allPoints = getAllPoints(rooms)\n\n        pathPoints.forEach(pathPoint => {\n            allPoints.forEach(point => {\n                if (pathPoint.id !== point.id) {\n                    if (Math.abs(pathPoint.absX - point.absX) <= 16) {\n                        rooms[roomIndex].points[pathPoint.i].x = point.absX - pathPoint.offsetX\n                    }\n                    if (Math.abs(pathPoint.absY - point.absY) <= 16) {\n                        rooms[roomIndex].points[pathPoint.i].y = point.absY - pathPoint.offsetY\n                    }\n                }\n            });\n        });\n        setRooms([...rooms])\n    }\n\n    const segmentClicked = e => {\n        e.preventDefault()\n        \n        let coords = { x : null, y : null}\n        \n        if (e.type === 'mouseup') {\n            coords.x = e.clientX\n            coords.y = e.clientY\n            setPointer(coords)\n        } else {\n            console.log(e)\n            console.log(e.originalEvent)\n            coords.x = e.changedTouches[0].clientX\n            coords.y = e.changedTouches[0].clientY\n            setPointer(coords)\n        }\n\n\n        setQuickMenuPosition(coords)\n        setQuickMenuState(prev => !prev)\n        setSelectedPathPoints(pathPoints)\n        setNode(e.target)\n    }\n\n    // if (!visible) {\n    //     return null;\n    // }\n\n    return (\n        <DraggableCore\n            handle=\".segment\"\n            //onStart={() => setIsDragging(true)}\n            onDrag={dragging}\n            onStop={dragEnd}\n            cancel=\".doorCenter, .outlet\"\n        >\n            <path\n                style={visible ? { visibility: \"visible\" } : { visibility: 'hidden' }}\n                d={path(data)}\n                id={a.room + '.' + a.i + '.' + b.i}\n                className=\"segment\"\n                strokeWidth={20}\n                stroke=\"#77cfff\"\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                opacity={0.8}\n            //onClick={e => segmentClicked(e)}\n            />\n        </DraggableCore>\n    );\n}\n","import React from \"react\";\n\nfunction Size({ pathPoints, visible }) {\n    const [a, b] = pathPoints;\n\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n\n    var c = Math.round(Math.floor(Math.sqrt(dx * dx + dy * dy) / 5) * 5)\n    //console.log(c)\n\n    if (!visible) {\n        return null;\n    }\n\n    return ( // need to \n        <text\n            //transform='rotate(90 )'\n            style={{ pointerEvents: 'none', fill: '#404040' }}>\n            <textPath startOffset=\"45%\" xlinkHref={\"#\" + a.room + '.' + a.i + '.' + b.i}>\n                {c}\n            </textPath>\n        </text>\n    );\n}\n\nexport default Size;\n","import React, { useContext } from 'react'\nimport { project } from '../../utils'\nimport { RoomContext } from \"../../RoomContext\"\nimport { DraggableCore } from \"react-draggable\"\n\nexport default function Door({ door, i }) {\n\n    const { __rooms } = useContext(RoomContext)\n\n    const [rooms, setRooms] = __rooms\n\n    const { pointsIds, doorCenter, doorId } = door\n\n    const room = rooms.find(({ id }) => id === pointsIds.a.split('.')[0])\n\n    const a = room.getPoints().find(({ id }) => id === pointsIds.a)\n    const b = room.getPoints().find(({ id }) => id === pointsIds.b)\n\n    const side1 = { x: doorCenter.x - 50, y: doorCenter.y - 50 }\n    const side2 = { x: doorCenter.x + 50, y: doorCenter.y + 50 }\n\n    //console.log(side1)\n\n    const p1 = project(side1, a, b).point\n    const p2 = project(side2, a, b).point\n\n    const dragging = (e, dnd) => {\n\n        const newDoorCenter = { ...doorCenter }\n        newDoorCenter.x += dnd.deltaX\n        newDoorCenter.y += dnd.deltaY\n\n        const newPoint = project(newDoorCenter, a, b)\n\n        room.doors[i].doorCenter.x = newPoint.point.x\n        room.doors[i].doorCenter.y = newPoint.point.y\n        setRooms([...rooms])\n    }\n\n    return (\n\n        <DraggableCore\n            handle=\".doorCenter\"\n            onDrag={dragging}\n        >\n\n            <line\n                className='doorCenter'\n                id={doorId}\n                x1={p1.x}\n                y1={p1.y}\n                x2={p2.x}\n                y2={p2.y}\n                fill='#ffffaa'\n                stroke=\"#ffffaa\"\n                strokeWidth={8}\n            />\n\n\n        </DraggableCore>\n    )\n}\n","import React from 'react'\n\n\nfunction Lamp({ props }) {\n\n    return (\n        \n            <g>\n    \n                <title>Lighting</title>\n                <g\n                    id=\"1\"\n                    transform=\"rotate(45)\"\n                    style={{ pointerEvents: 'all' }}\n                >\n                    <title>Lighting</title>\n                    <g id=\"2\" >\n                        <title>Lighting</title>\n                        <path\n                            d=\"M-6 0 L6 0\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        />\n                    </g>\n                    <g id=\"3\" >\n                        <title>Lighting</title>\n                        <path\n                            d=\"M0 -6 L0 6\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        />\n                    </g>\n                    \n                </g>\n            </g>\n        \n    )\n}\n\nexport default Lamp\n","import React from 'react'\n\n\nfunction Outlet(props) {\n    console.log(props)\n\n    const { type, grounding, shutter } = props.props // WTF ???\n    const angle = props.angle\n\n    return (\n\n        <g\n            className='outlet'\n            style={{ pointerEvents: 'all' }}\n            transform='translate(0 -2) rotate(270)'\n        >\n            <text\n                transform={`translate(10 0) rotate(${angle ? - angle : 0} )`}\n                fontSize={'33%'}\n                textAnchor='middle'\n                alignmentBaseline='central'\n            >\n                {type === 1 ? null : type}\n                \n            </text>\n            <g id=\"2\"\n                transform={`translate(0 -6)`}\n\n            >\n                <path // ground\n                    d=\"M3.54 11.58 L3.54 0.24\"\n                    stroke='black'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth={1}\n                    fill='none'\n                    visibility={grounding === true ? 'visible' : 'hidden'}\n                />\n\n                <path // protect left\n                    d=\"M8.27 1.2 L8.27 0.25\"\n                    stroke='black'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth={1}\n                    fill='none'\n                    visibility={shutter === true ? 'visible' : 'hidden'}\n\n\n                />\n                <path // protect right\n                    d=\"M8.27 11.6 L8.27 10.65\"\n                    stroke='black'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth={1}\n                    fill='none'\n                    visibility={shutter === true ? 'visible' : 'hidden'}\n\n\n                />\n                <path //arc\n                    d=\"M8.27 10.65 A4.72441 4.72441 0 0 1 3.55 5.93 A4.72441 4.72441 0 0 1 8.27 1.2\"\n                    stroke='black'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth={1}\n                    fill='none'\n\n                />\n                <path //foot\n                    d=\"M3.54 5.92 L-0 5.92\"\n                    id='coucou'\n                    stroke='black'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth={1}\n                    fill='none'\n                />\n            </g>\n        </g>\n    )\n}\n\nexport default Outlet\n","import React from 'react'\n\nfunction Switch(props, angle) {\n\n    const { type, pole, way, dimmer } = props.props // wtf\n    \n    return (\n            <g\n                className='switch'\n                style={{ pointerEvents: 'all' }}\n            >\n                <g id=\"1\"\n                >\n                    <g id=\"2\"\n                        transform='translate(-5 -17)'\n                    >\n                        {/* <title>Double pole change over switch</title> */}\n                        <path\n                            d=\"M8.55 10.53 A2.83465 2.83465 0 1 1 2.88 10.53 A2.83465 2.83465 0 1 1 8.55 10.53 Z\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                        />\n                        <path // Only for pushButton\n                            d=\"M8.55 10.53 A2.83465 2.83465 0 1 1 2.88 10.53 A2.83465 2.83465 0 1 1 8.55 10.53 Z\"\n                            transform='translate(-4.5 -8.5) scale(1.8) '\n                            vectorEffect=\"non-scaling-stroke\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1.5}\n                            fill='none'\n                            visibility={ type === \"push\" ? 'visible' : 'hidden'}\n                        />\n                        <path // double pole\n                            d=\"M8.68 2.39 L10.65 3.11\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={pole === 2 && type === 'switch' ? 'visible' : 'hidden'}\n\n\n                        />\n                        <path // main switch \n                            d=\"M6.69 7.87 L9.46 0.24 L11.44 0.96\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={type === 'push' ? 'hidden' : 'visible'}\n                        />\n                        <path // only for inverter \n                            d=\"M6.69 7.87 L9.46 0.24 L11.44 0.96\"\n                            transform='scale(-1, 1) translate(-11 0)'\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={type === 'inverter' ? 'visible' : 'hidden'}\n                        />\n\n                        <path // double pole ????\n                            d=\"M8.55 10.53 A2.83465 2.83465 0 1 1 2.88 10.53 A2.83465 2.83465 0 1 1 8.55 10.53\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={pole === 2 && type === 'switch' ? 'hidden' : 'hidden'}\n\n                        />\n                        <path // double pole\n                            d=\"M2.76 18.68 L0.78 17.96\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={pole === 2 && type === 'switch' && way === 2 ? 'visible' : 'hidden'}\n\n                        />\n                        <path // second throw\n                            d=\"M4.75 13.2 L1.97 20.83 L0 20.11\"\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={way === 2 && type === 'switch' || type === 'inverter' ? 'visible' : 'hidden'}\n                        />\n                        <path // second throw only for inverter\n                            d=\"M4.75 13.2 L1.97 20.83 L0 20.11\"\n                            transform='scale(-1, 1) translate(-11 0)'\n                            stroke='black'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            strokeWidth={1}\n                            fill='none'\n                            visibility={type === 'inverter' ? 'visible' : 'hidden'}\n                        />\n                    </g>\n                </g>\n            </g>\n    )\n}\n\nexport default Switch\n","import React from 'react'\n\nfunction Circuit(props, angle) {\n\n    const circuit = props.circuit\n\n    return (\n        <text\n            fontSize='0.6em'\n            transform={`translate(0 -17) )`}\n            textAnchor='middle'\n\n        >\n            { \n            `${circuit.name}${circuit.number}`.toUpperCase()\n            } \n        </text>\n    )\n}\n\nexport default Circuit\n","import React, { useContext, useState, useRef, useEffect } from 'react'\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore } from 'react-draggable'\nimport { project } from '../../utils'\n\n\nimport Lamp from './Lamp'\nimport Outlet from './Outlet'\nimport Switch from './Switch'\nimport Circuit from './Circuit'\n\n\n\nfunction Component({ component, i }) {\n\n    const { __rooms, __componentPropertiesMenu } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n    const [componentPropertiesMenu, setComponentPropertiesMenu] = __componentPropertiesMenu\n    const room = rooms.find(({ id }) => id === component.room.id)\n    const { anchorPoint, category, node } = component\n    let { x, y } = anchorPoint\n\n    const [isDragging, setIsDragging] = useState(false)\n    const [box, setBox] = useState({})\n\n    const refSVG = useRef();\n\n    useEffect(() => {\n        const { current } = refSVG\n        setBox(current.getBBox())\n        console.log(current.getBBox())\n    }, [component.props.type])\n\n    if (!component) {\n        return null\n    }\n\n\n\n    if (component.node.nodeName === 'path') {\n\n        const aId = node.id.split('.')[0] + '.' + node.id.split('.')[1]\n        const bId = node.id.split('.')[0] + '.' + node.id.split('.')[2]\n\n        const a = room.getPoints().find(({ id }) => id === aId)\n        const b = room.getPoints().find(({ id }) => id === bId)\n\n        const newPoint = project(anchorPoint, a, b)\n\n        x = newPoint.point.x\n        y = newPoint.point.y\n\n        var angle = (Math.atan2(b.y - a.y, b.x - a.x) * 180 / Math.PI) - 90;\n        //console.log(angle)\n    }\n\n    const dragging = (e, dnd) => {\n        setIsDragging(true)\n\n        const newAnchorPoint = { ...anchorPoint }\n        newAnchorPoint.x += dnd.deltaX\n        newAnchorPoint.y += dnd.deltaY\n\n        if (component.node.nodeName === 'path') {\n            const aId = node.id.split('.')[0] + '.' + node.id.split('.')[1]\n            const bId = node.id.split('.')[0] + '.' + node.id.split('.')[2]\n\n            const a = room.getPoints().find(({ id }) => id === aId)\n            const b = room.getPoints().find(({ id }) => id === bId)\n            const newPoint = project(newAnchorPoint, a, b)\n\n            room.components[i].anchorPoint.x = newPoint.point.x\n            room.components[i].anchorPoint.y = newPoint.point.y\n        }\n        else {\n            room.components[i].anchorPoint.x = newAnchorPoint.x\n            room.components[i].anchorPoint.y = newAnchorPoint.y\n        }\n        setRooms([...rooms])\n    }\n\n    const dragEnd = e => {\n        if (!isDragging) {\n            setComponentPropertiesMenu({ open: true, component: component })\n        }\n        setIsDragging(false)\n    }\n\n    const switchRender = (category) => {\n        switch (category) {\n            case 'switch':\n                return <Switch props={component.props} angle={angle} />\n            case 'outlet':\n                return <Outlet props={component.props} angle={angle} />\n            case 'lamp':\n                return <Lamp props={component.props} angle={angle} />\n            default:\n                return null\n        }\n    }\n\n\n\n    return (\n        <DraggableCore\n            handle={'.' + component.category}\n            onDrag={dragging}\n            onStop={dragEnd}\n        >\n            <g\n                className={category}\n                id={component.id}\n                transform={`translate(${x} ${y}) scale(1.75) `}\n            >\n                <rect\n                    transform={`rotate(${angle ? (angle === 0 ? 80 : angle + 90) : 90}) `}\n                    x={box.x}\n                    y={box.y}\n                    width={box.width}\n                    height={box.height}\n                    fill='red'\n                    opacity={0.3}\n                />\n\n                <g\n                    ref={refSVG}\n                    transform={`rotate(${angle ? (angle === 0 ? 80 : angle + 90) : 90}) `}\n                >\n                    {switchRender(component.category)}\n                </g>\n                <g  \n                    className='circuit'\n                    transform={`rotate(${angle ? (angle === 0 ? 80 : angle + 90) : 90}) translate (${0} ${box.y}) `}\n\n                >\n                    <Circuit circuit={component.props.circuit} />\n                </g>\n            </g>\n\n\n        </DraggableCore>\n    )\n}\n\nexport default Component\n","import React, { useContext, useState } from \"react\";\nimport { RoomContext } from '../../RoomContext'\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { getPath, getPolygon, getAllPoints } from \"../../utils\";\nimport Floor from \"./Floor\";\nimport Point from \"./Point\";\nimport Segment from \"./Segment\";\nimport Size from \"./Size\";\nimport Door from './Door'\nimport Outlet from '../ELECTRICAL/Outlet'\nimport Switch from '../ELECTRICAL/Switch'\nimport Lamp from '../ELECTRICAL/Lamp'\nimport Component from './../ELECTRICAL/Component'\n\n\nfunction Room({\n    isSelected,\n    room,\n    i\n}) {\n\n    const { __rooms, __selectedRoom, __pointer, __quickMenuPosition, __quickMenuState, __node } = useContext(RoomContext)\n    const [rooms, setRooms] = __rooms\n    const setSelectedRoom = __selectedRoom[1]\n    const [pointer, setPointer] = __pointer\n    const [quickMenuPosition, setQuickMenuPosition] = __quickMenuPosition\n    const [quickMenuState, setQuickMenuState] = __quickMenuState\n    const [node, setNode] = __node\n\n    const [isDragging, setIsDragging] = useState(false)\n\n    const deleteRoom = (e: any) => {\n        if (isSelected) {\n            if (e.keyCode === 8) {\n                setRooms((rooms: any) => rooms.filter((el: any) => el.id !== room.id));\n            }\n        }\n    };\n\n    const roomClicked = e => {\n        e.preventDefault()\n\n        let coords = { x: null, y: null }\n\n        if (e.type === 'mouseup' || e.type === 'click') {\n            coords.x = e.clientX\n            coords.y = e.clientY\n            setPointer(coords)\n        } else {\n            console.log(e)\n            console.log(e.originalEvent)\n            coords.x = e.changedTouches[0].clientX\n            coords.y = e.changedTouches[0].clientY\n            setPointer(coords)\n        }\n\n        setQuickMenuPosition(coords)\n        setQuickMenuState(prev => !prev)\n        setNode(e.target)\n\n    }\n\n    const dragging = (e: any, dnd: DraggableData) => {\n        e.preventDefault()\n\n        setIsDragging(true)\n\n        const newRooms = [...rooms]\n        newRooms[i].x += dnd.deltaX\n        newRooms[i].y += dnd.deltaY\n\n        setRooms(newRooms)\n    };\n\n    const dragEnded = (e) => {\n\n        if (!isDragging) {\n            if (isSelected) { roomClicked(e)}\n            return\n        }\n        \n        setIsDragging(false)\n\n        const allPoints = getAllPoints(rooms)\n\n        room.getPoints().forEach(point => {\n            allPoints.forEach(otherPoint => {\n\n                let dx = Math.abs(point.absX - otherPoint.absX)\n                let dy = Math.abs(point.absY - otherPoint.absY)\n\n                if (point.room !== otherPoint.room) {\n                    if (dx <= 16) {\n                        rooms[i].points[point.i].x = otherPoint.absX - point.offsetX\n                    }\n                    if (dy <= 16) {\n                        rooms[i].points[point.i].y = otherPoint.absY - point.offsetY\n                    }\n                }\n            })\n        })\n        setRooms([...rooms])\n    }\n\n    return (\n        <DraggableCore\n            handle=\".room\"\n            cancel=\".corner, .segment, .doorCenter, .outlet, .switch, .lamp\"\n            disabled={!isSelected}\n            onStop={dragEnded}\n            onDrag={dragging}\n        >\n            <g\n                className={\"room\"}\n                id={room.id}\n                transform={`translate(${room.x} ${room.y})`}\n                onClick={(e) => {\n                    //if (isSelected) { roomClicked(e)}\n                    setSelectedRoom(room.id);\n                }}\n                onKeyDown={deleteRoom}\n                tabIndex={-1}\n                style={{ outline: 0 }}\n            >\n                <Floor\n                    polygon={getPolygon(room.getPoints())}\n                    isSelected={isSelected}\n                    roomId={room.id}\n                />\n\n                {\n                    getPath(room.getPoints()).map((pathPoints, index) => (\n                        <Segment\n                            key={index}\n                            pathPoints={pathPoints}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n\n                {\n                    room.getPoints().map((point, index) => (\n                        <Point\n                            key={index}\n                            point={point}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n                {\n                    getPath(room.getPoints()).map((pathPoints, index) => (\n                        <Size\n                            key={index}\n                            pathPoints={pathPoints}\n                            visible={isSelected}\n                        />\n                    ))\n                }\n                {\n                    room.doors.map((door, i) => (\n                        <Door\n                            key={i}\n                            door={door}\n                            i={i}\n                        />\n                    ))\n                }\n                {\n                    room.components.map((component, i) => (\n                        <Component\n                            key={i}\n                            component={component}\n                            i={i}\n                        />\n                    ))\n                }\n                \n            </g>\n        </DraggableCore>\n    );\n}\n\nexport default Room;\n\n","import React, { useContext } from \"react\";\nimport Background from \"./Background\";\nimport Room from \"./Room\";\nimport Component from './../ELECTRICAL/Component'\nimport { RoomContext } from \"./../../RoomContext\";\n\nexport default function Plan() {\n\n    const { __rooms, __selectedRoom, __components } = useContext(RoomContext)\n\n    const [rooms] = __rooms;\n    const [components] = __components\n    const [selectedRoom] = __selectedRoom;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    return (\n        <svg\n            id='plan'\n            width={width}\n            height={height}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n\n            <Background\n                width={width}\n                height={height}\n            />\n\n            {\n                rooms\n                    .sort((a, b) => {\n                        const c = (a.id === selectedRoom)\n                        const d = (b.id === selectedRoom)\n                        return (c === d) ? 0 : c ? 1 : - 1\n                    })\n                    .map((room, i) => {\n                        return (\n                            <Room\n                                key={room.id}\n                                isSelected={selectedRoom === room.id ? true : false}\n                                room={room}\n                                i={i}\n                            />\n                        );\n                    })\n            }\n\n            {\n                rooms.reduce((acc, curr, i) => {\n                    acc.push(...curr.doors)\n                    return acc\n                }, []).map((door, i) => {\n                    const room = rooms.find(({ id }) => id === door.doorId.split('.')[0])\n                    console.log('#' + door.doorId)\n\n                    // if (selectedRoom !== room.id) {\n                    return (\n                        <use\n                            key={i}\n                            xlinkHref={'#' + door.doorId}\n                            transform={`translate(${room.x} ${room.y})`}\n                        />\n                    )\n                    //} else return\n                })\n            }\n        </svg>\n    );\n}\n","import React, { useContext } from 'react'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport { getPointCoords, getAllPoints } from './../../utils'\nimport { RoomContext } from './../../RoomContext'\n\nconst QuickMenu = () => {\n\n    const {\n        __rooms,\n        __components,\n        __quickMenuPosition,\n        __quickMenuState,\n        __selectedPathPoints,\n        __pointer,\n        __componentPropertiesMenu,\n        __node\n    } = useContext(RoomContext)\n\n    const [rooms, setRooms] = __rooms\n    const [components, setComponents] = __components\n    const [quickMenuPosition, setQuickMenuPosition] = __quickMenuPosition\n    const [quickMenuState, setQuickMenuState] = __quickMenuState\n    const [selectedPathPoints] = __selectedPathPoints\n    const [pointer] = __pointer\n    const [componentPropertiesMenu, setComponentPropertiesMenu] = __componentPropertiesMenu\n    const [node, setNode] = __node\n\n    if (!node) return null\n\n    const handleClose = () => {\n        setQuickMenuState(false)\n        setQuickMenuPosition(null)\n    }\n\n    const addCorner = e => {\n        //e.persist()\n\n        const [a] = selectedPathPoints\n        const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n        const x = pointer.x - rooms[roomIndex].x\n        const y = pointer.y - rooms[roomIndex].y\n\n        const newPoint = getPointCoords([x, y], selectedPathPoints)\n\n        getAllPoints(rooms).forEach(point => {\n            //console.log(newPoint)\n            if (Math.abs(point.absX - (newPoint.x + rooms[roomIndex].x)) < 16) {\n                newPoint.x = point.absX - rooms[roomIndex].x\n            }\n            if (Math.abs(point.absY - (newPoint.y + rooms[roomIndex].y)) < 16) {\n                newPoint.y = point.absY - rooms[roomIndex].y\n            }\n        })\n\n        const point1 = { ...newPoint }\n        const point2 = { ...newPoint }\n\n        rooms[roomIndex].points.splice(a.i + 1, 0, point1, point2)\n        setRooms([...rooms])\n\n        handleClose()\n    }\n\n    const addDoor = () => {\n\n        const [a, b] = selectedPathPoints\n\n        const roomIndex = rooms.findIndex(room => room.id === a.room)\n\n        const x = pointer.x - rooms[roomIndex].x\n        const y = pointer.y - rooms[roomIndex].y\n\n        const doorCenter = getPointCoords([x, y], selectedPathPoints)\n        const doorId = rooms[roomIndex].id + '.door.' + rooms[roomIndex].doors.length\n\n\n        const pointsIds = { a: a.id, b: b.id }\n\n        const door = { pointsIds, doorCenter, doorId }\n\n        rooms[roomIndex].doors.push(door)\n\n        setRooms([...rooms])\n\n        handleClose()\n    }\n\n    const addComponent = (e) => {\n\n        const room = rooms.find(({ id }) => id === node.id.split('.')[0])\n\n        const x = pointer.x - room.x\n        const y = pointer.y - room.y\n\n        const anchorPoint = { x, y }\n        const index = rooms.find(({ id }) => id === room.id).components.filter(({ category }) => category === e.target.id).length\n\n        const category = e.target.id\n        const id = room.id + `.${category}.` + index\n\n        let props\n\n        switch (e.target.id) {\n            case 'lamp':\n                props = {circuit : {name : '', number: ''}}\n                break;\n            case 'outlet':\n                props = {\n                    type: 1,\n                    grounding: true,\n                    shutter: true,\n                    circuit : {name : '', number: ''}\n                }\n                break;\n            case 'switch':\n                props = {\n                    way: 1,\n                    pole: 1,\n                    dimmer: false,\n                    illuminated: false,\n                    type: 'switch',\n                    circuit : {name : '', number: ''}\n                }\n                break;\n\n            default:\n                break;\n        }\n\n        const component = {\n            anchorPoint,\n            id,\n            category,\n            room,\n            node,\n            props\n        }\n\n        room.components.push(component)\n\n        setRooms([...rooms])\n        handleClose()\n    }\n\n    return (\n        <Menu\n            id=\"quickMenu\"\n            transitionDuration={{ enter: 0, exit: 0 }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n                quickMenuPosition !== null\n                    ? { top: quickMenuPosition.y, left: quickMenuPosition.x }\n                    : undefined\n            }\n            open={quickMenuState}\n            onClose={handleClose}\n        >\n            {node.nodeName === 'path' ? <MenuItem onClick={addCorner}>add corner</MenuItem> : null}\n            {node.nodeName === 'path' ? <MenuItem onClick={addDoor}>add door</MenuItem> : null}\n            <MenuItem onClick={addComponent} id='outlet'>add outlet</MenuItem>\n            <MenuItem onClick={addComponent} id='switch'>add switch</MenuItem>\n            {node.nodeName === 'polygon' ? <MenuItem onClick={addComponent} id='lamp'>add lamp</MenuItem> : null}\n        </Menu>\n    )\n}\n\nexport default QuickMenu\n","import React from 'react'\nimport { Grid, Button } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\n\nfunction SwitchProperties({ props, handleChange }) {\n\n    const { way, pole, dimmer, illuminated, type } = props\n\n    return (\n            <Grid container direction='column' spacing={1}>\n                <Grid item>\n                    <Grid\n                        container\n                        direction='column'\n                    >\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={type}\n                                onChange={handleChange}\n\n                            >\n                                <ToggleButton id='type' value={'switch'} selected={type === 'switch'}>Switch</ToggleButton>\n                                <ToggleButton id='type' value={'push'} selected={type === 'push'}>Push</ToggleButton>\n                                <ToggleButton id='type' value={'inverter'} selected={type === 'inverter'}>Inverter</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={way}\n                                onChange={handleChange}\n\n                            >\n                                <ToggleButton\n                                    value={1}\n                                    id='way'\n                                    selected={way === 1 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Single throw\n                                </ToggleButton>\n\n                                <ToggleButton\n                                    value={2}\n                                    id='way'\n                                    selected={way === 2 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n                                >\n                                    Double throw\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ToggleButtonGroup\n                                exclusive\n                                aria-label=\"text alignment\"\n                                value={pole}\n                                onChange={handleChange}\n                            >\n                                <ToggleButton\n                                    value={1}\n                                    id='pole'\n                                    selected={pole === 1 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Single Pole\n                                </ToggleButton>\n\n                                <ToggleButton\n                                    id='pole'\n                                    value={2}\n                                    selected={pole === 2 && type === 'switch'}\n                                    disabled={type !== 'switch'}\n\n                                >\n                                    Double Pole\n                                </ToggleButton>\n\n                            </ToggleButtonGroup>\n                        </Grid>\n                        <Grid item>\n                            <ToggleButton\n                                id='dimmer'\n                                value={dimmer}\n                                selected={dimmer}\n                                onChange={handleChange}\n                            >\n                                Dimmer\n                            </ToggleButton>\n                        </Grid>\n                        <Grid item>\n                            <ToggleButton\n                                id='illuminated'\n                                value={illuminated}\n                                selected={illuminated}\n                                onChange={handleChange}\n                            >\n                                Illuminated\n                            </ToggleButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n    )\n}\n\nexport default SwitchProperties\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\n\nfunction OutletProperties({ props, handleChange }) {\n\n    const { shutter, type, grounding } = props\n\n    return (\n        <Grid container direction='column' spacing={1}>\n            <Grid item>\n                <Grid\n                    container\n                    direction='column'\n                >\n                    <Grid item xs={12}>\n                        <ToggleButtonGroup\n                            exclusive\n                            aria-label=\"text alignment\"\n                            value={type}\n                            onChange={handleChange}\n\n                        >\n                            <ToggleButton id='type' value={1} selected={type === 1}>ONE</ToggleButton>\n                            <ToggleButton id='type' value={2} selected={type === 2}>TWO</ToggleButton>\n                            <ToggleButton id='type' value={3} selected={type === 3}>THREE</ToggleButton>\n                            <ToggleButton id='type' value={4} selected={type === 4}>FOOR</ToggleButton>\n                            <ToggleButton id='type' value={5} selected={type === 5}>FIVE</ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid container justify=\"center\" spacing={0}>\n\n                    <Grid item xs={6} style={{ textAlign: \"center\" }} >\n                        <ToggleButton\n                            id='grounding'\n                            value={grounding}\n                            selected={grounding}\n                            onChange={handleChange}\n                        >\n                            Grounding\n                        </ToggleButton>\n                    </Grid>\n                    <Grid item xs={6} style={{ textAlign: \"center\" }} >\n                        <ToggleButton\n                            id='shutter'\n                            value={shutter}\n                            selected={shutter}\n                            onChange={handleChange}\n                        >\n                            Shutter</ToggleButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default OutletProperties\n","import React from 'react'\n\nfunction LampProperties(props) {\n    return (\n        <div>\n            lamp properties\n        </div>\n    )\n}\n\nexport default LampProperties\n","import React, { useState } from 'react'\nimport { TextField } from '@material-ui/core'\n\nfunction CircuitChooser({ circuit, handleChange }) {\n\n    const [name, setName] = useState(circuit.name)\n\n    const handleCircuitName = e => {\n        setName(e.target.value)\n        handleChange(e)\n    }\n\n    return (\n        <TextField\n            id=\"circuit\"\n            label=\"Circuit\"\n            margin=\"normal\"\n            variant='filled'\n            onChange={handleCircuitName}\n            value={name ? name.toUpperCase() : ''}\n        />\n    )\n}\n\nexport default CircuitChooser\n","import React, { useContext } from 'react'\nimport { Dialog, DialogTitle, Grid, Button, Typography } from '@material-ui/core'\nimport { RoomContext } from '../../RoomContext'\nimport SwitchProperties from './SwitchProperties'\nimport OutletProperties from './OutletProperties'\nimport LampProperties from './LampProperties'\nimport CircuitChooser from './CircuitChooser'\nimport { getAllElementsOnCircuit } from './../../utils'\n\nfunction ComponentPropertiesMenu() {\n\n    const { __componentPropertiesMenu, __rooms } = useContext(RoomContext)\n\n    const [componentPropertiesMenu, setComponentPropertiesMenu] = __componentPropertiesMenu\n    const [rooms, setRooms] = __rooms\n\n    const { open, component } = componentPropertiesMenu\n\n    if (!component) {\n        return null\n    }\n\n    const roomIndex = rooms.findIndex(({ id }) => id = component.room.id)\n    const componentIndex = rooms[roomIndex].components.findIndex(({ id }) => id === component.id)\n\n    const handleClose = () => {\n        setComponentPropertiesMenu({})\n    }\n\n    const handleChange = (e) => {\n        console.log(e)\n\n        let newValue = e.currentTarget.value\n\n        if (newValue === 'true') newValue = false\n        else if (newValue === 'false') newValue = true\n        else if (newValue === '') newValue = ''\n        else if (!isNaN(newValue)) newValue = parseInt(newValue)\n        console.log(newValue)\n\n        const property = e.currentTarget.id\n        if (property === 'circuit') {\n            rooms[roomIndex].components[componentIndex].props[property].name = newValue\n            rooms[roomIndex].components[componentIndex].props[property].number = getAllElementsOnCircuit(rooms, newValue)\n        }\n        else {\n            rooms[roomIndex].components[componentIndex].props[property] = newValue\n        }\n        setRooms([...rooms])\n\n    }\n\n    const renderSwitch = (category) => {\n        switch (category) {\n            case 'switch':\n                return <SwitchProperties props={component.props} handleChange={handleChange} />\n            case 'outlet':\n                return <OutletProperties props={component.props} handleChange={handleChange} />\n            case 'lamp':\n                return <LampProperties props={component.props} handleChange={handleChange} />\n            default:\n                break;\n        }\n    }\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Set component properties</DialogTitle>\n            <Typography>\n                id : {component.id}\n            </Typography>\n            <CircuitChooser circuit={component.props.circuit} handleChange={handleChange} />\n\n            {\n                renderSwitch(component.category)\n            }\n            <Grid item>\n                <Button onClick={() => setComponentPropertiesMenu({ open: false })} variant=\"contained\" color=\"primary\" fullWidth>\n                    Save\n                    </Button>\n            </Grid>\n\n        </Dialog>\n    )\n}\n\nexport default ComponentPropertiesMenu\n","import React, { useState } from \"react\";\nimport Plan from \"./components/BUILDING/Plan\";\nimport \"./App.css\";\nimport QuickMenu from './components/UI/QuickMenu'\nimport { RoomContext } from './RoomContext'\nimport ComponentPropertiesMenu from \"./components/UI/ComponentPropertiesMenu\";\n\nfunction App() {\n    const __rooms = useState([])\n    const __components = useState([])\n    const __quickMenuPosition = useState(null)\n    const __quickMenuState = useState(false)\n    const __selectedRoom = useState(null)\n    const __selectedPathPoints = useState(null)\n    const __pointer = useState(null)\n    const __doors = useState([])\n    const __node = useState(null)\n    const __outletPropertiesMenu = useState({ open: false })\n    const __switchPropertiesMenu = useState({ open: false })\n    const __componentPropertiesMenu = useState({ open: false })\n\n    const CTX = {\n        __rooms,\n        __components,\n        __quickMenuPosition,\n        __quickMenuState,\n        __selectedRoom,\n        __selectedPathPoints,\n        __pointer,\n        __doors,\n        __node,\n        __outletPropertiesMenu,\n        __switchPropertiesMenu,\n        __componentPropertiesMenu,\n    }\n\n    return (\n        <div\n            className=\"App\"\n            style={{ overscrollBehavior: \"none\" }}\n            onContextMenu={e => e.preventDefault()}\n        >\n            <RoomContext.Provider value={CTX}>\n                <Plan />\n                <QuickMenu />\n                {/* <OutletPropertiesMenu />\n                <SwitchPropertiesMenu /> */}\n                <ComponentPropertiesMenu />\n            </RoomContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n            window.location.href,\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}